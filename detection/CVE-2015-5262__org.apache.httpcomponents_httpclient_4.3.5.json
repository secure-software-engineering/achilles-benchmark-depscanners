{
    "vulnerable": true,
    "gav": {
        "version": "4.3.5",
        "groupId": "org.apache.httpcomponents",
        "artifactId": "httpclient"
    },
    "details": [
        {
            "contained": true,
            "commit": "1626784",
            "qname": "org.apache.http.conn.ssl.SSLConnectionSocketFactory",
            "affectedFile": "/org/apache/http/conn/ssl/SSLConnectionSocketFactory.class",
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/1626784/org/apache/http/conn/ssl/SSLConnectionSocketFactory.class",
            "diff": "{\"lhs\" : {\"connectSocket.18\":\"$r13 := @caughtexception\",\"connectSocket.20\":\"goto [?= throw $r13]\",\"connectSocket.21\":\"$r14 := @caughtexception\",\"connectSocket.22\":\"throw $r13\",\"verifyHostname.6\":\"$r6 := @caughtexception\",\"verifyHostname.8\":\"goto [?= throw $r6]\",\"verifyHostname.9\":\"$r7 := @caughtexception\",\"verifyHostname.10\":\"throw $r6\"},\"rhs\" : {\"connectSocket.18\":\"$r14 := @caughtexception\",\"connectSocket.20\":\"goto [?= throw $r14]\",\"connectSocket.21\":\"$r13 := @caughtexception\",\"connectSocket.22\":\"throw $r14\",\"verifyHostname.6\":\"$r7 := @caughtexception\",\"verifyHostname.8\":\"goto [?= throw $r7]\",\"verifyHostname.9\":\"$r6 := @caughtexception\",\"verifyHostname.10\":\"throw $r7\"}}"
        },
        {
            "contained": true,
            "commit": "1626784",
            "qname": "org.apache.http.conn.ssl.SSLConnectionSocketFactory.connectSocket(int,Socket,HttpHost,InetSocketAddress,InetSocketAddress,HttpContext)",
            "affectedFile": "/org/apache/http/conn/ssl/SSLConnectionSocketFactory.class",
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/1626784/org/apache/http/conn/ssl/SSLConnectionSocketFactory.class",
            "diff": "{\"lhs\" : {\"18\":\"$r13 := @caughtexception\",\"20\":\"goto [?= throw $r13]\",\"21\":\"$r14 := @caughtexception\",\"22\":\"throw $r13\"},\"rhs\" : {\"18\":\"$r14 := @caughtexception\",\"20\":\"goto [?= throw $r14]\",\"21\":\"$r13 := @caughtexception\",\"22\":\"throw $r14\"}}"
        },
        {
            "contained": true,
            "commit": "1576361",
            "qname": "org.apache.http.conn.ssl.SSLSocketFactory",
            "affectedFile": "-deprecated/org/apache/http/conn/ssl/SSLSocketFactory.class",
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/1576361/org/apache/http/conn/ssl/SSLSocketFactory.class",
            "diff": "{\"lhs\" : {\"modifier\":1,\"interfaces\":[\"SchemeLayeredSocketFactory\", \"LayeredSchemeSocketFactory\", \"LayeredSocketFactory\"],\"EMPTY_PASSWORD\":\"<org.apache.http.conn.ssl.SSLSocketFactory: char[] EMPTY_PASSWORD>\",\"supportedProtocols\":null,\"supportedCipherSuites\":null,\"getSocketFactory.1\":[\"$r1 = staticinvoke <org.apache.http.conn.ssl.SSLSocketFactory: javax.net.ssl.SSLContext createDefaultSSLContext()>()\", \"specialinvoke $r0.<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(javax.net.ssl.SSLContext)>($r1)\"],\"getSystemSocketFactory.1\":[\"$r1 = staticinvoke <org.apache.http.conn.ssl.SSLSocketFactory: javax.net.ssl.SSLContext createSystemSSLContext()>()\", \"specialinvoke $r0.<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(javax.net.ssl.SSLContext)>($r1)\"],\"createSSLContext\":\"<org.apache.http.conn.ssl.SSLSocketFactory: javax.net.ssl.SSLContext createSSLContext(java.lang.String,java.security.KeyStore,java.lang.String,java.security.KeyStore,java.security.SecureRandom,org.apache.http.conn.ssl.TrustStrategy)>\",\"createSystemSSLContext\":\"<org.apache.http.conn.ssl.SSLSocketFactory: javax.net.ssl.SSLContext createSystemSSLContext(java.lang.String,java.security.SecureRandom)>\",\"createDefaultSSLContext\":\"<org.apache.http.conn.ssl.SSLSocketFactory: javax.net.ssl.SSLContext createDefaultSSLContext()>\",\"createSystemSSLContext\":\"<org.apache.http.conn.ssl.SSLSocketFactory: javax.net.ssl.SSLContext createSystemSSLContext()>\",\"<init>.7\":[\"$r7 = staticinvoke <org.apache.http.conn.ssl.SSLSocketFactory: javax.net.ssl.SSLContext createSSLContext(java.lang.String,java.security.KeyStore,java.lang.String,java.security.KeyStore,java.security.SecureRandom,org.apache.http.conn.ssl.TrustStrategy)>(r1, r2, r3, r4, r5, null)\", \"specialinvoke r0.<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(javax.net.ssl.SSLContext,org.apache.http.conn.scheme.HostNameResolver)>($r7, r6)\"],\"<init>.7\":[\"$r7 = staticinvoke <org.apache.http.conn.ssl.SSLSocketFactory: javax.net.ssl.SSLContext createSSLContext(java.lang.String,java.security.KeyStore,java.lang.String,java.security.KeyStore,java.security.SecureRandom,org.apache.http.conn.ssl.TrustStrategy)>(r1, r2, r3, r4, r5, null)\", \"specialinvoke r0.<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(javax.net.ssl.SSLContext,org.apache.http.conn.ssl.X509HostnameVerifier)>($r7, r6)\"],\"<init>.8\":[\"$r8 = staticinvoke <org.apache.http.conn.ssl.SSLSocketFactory: javax.net.ssl.SSLContext createSSLContext(java.lang.String,java.security.KeyStore,java.lang.String,java.security.KeyStore,java.security.SecureRandom,org.apache.http.conn.ssl.TrustStrategy)>(r1, r2, r3, r4, r5, r6)\", \"specialinvoke r0.<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(javax.net.ssl.SSLContext,org.apache.http.conn.ssl.X509HostnameVerifier)>($r8, r7)\"],\"<init>.4\":[\"$r4 = <org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.X509HostnameVerifier BROWSER_COMPATIBLE_HOSTNAME_VERIFIER>\", \"specialinvoke r0.<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(java.lang.String,java.security.KeyStore,java.lang.String,java.security.KeyStore,java.security.SecureRandom,org.apache.http.conn.ssl.TrustStrategy,org.apache.http.conn.ssl.X509HostnameVerifier)>(\"TLS\", r1, r2, r3, null, null, $r4)\"],\"<init>.3\":[\"$r3 = <org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.X509HostnameVerifier BROWSER_COMPATIBLE_HOSTNAME_VERIFIER>\", \"specialinvoke r0.<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(java.lang.String,java.security.KeyStore,java.lang.String,java.security.KeyStore,java.security.SecureRandom,org.apache.http.conn.ssl.TrustStrategy,org.apache.http.conn.ssl.X509HostnameVerifier)>(\"TLS\", r1, r2, null, null, null, $r3)\"],\"<init>.2\":[\"$r2 = <org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.X509HostnameVerifier BROWSER_COMPATIBLE_HOSTNAME_VERIFIER>\", \"specialinvoke r0.<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(java.lang.String,java.security.KeyStore,java.lang.String,java.security.KeyStore,java.security.SecureRandom,org.apache.http.conn.ssl.TrustStrategy,org.apache.http.conn.ssl.X509HostnameVerifier)>(\"TLS\", null, null, r1, null, null, $r2)\"],\"<init>.3\":[\"specialinvoke r0.<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(java.lang.String,java.security.KeyStore,java.lang.String,java.security.KeyStore,java.security.SecureRandom,org.apache.http.conn.ssl.TrustStrategy,org.apache.http.conn.ssl.X509HostnameVerifier)>(\"TLS\", null, null, null, null, r1, r2)\"],\"<init>.2\":[\"$r2 = <org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.X509HostnameVerifier BROWSER_COMPATIBLE_HOSTNAME_VERIFIER>\", \"specialinvoke r0.<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(java.lang.String,java.security.KeyStore,java.lang.String,java.security.KeyStore,java.security.SecureRandom,org.apache.http.conn.ssl.TrustStrategy,org.apache.http.conn.ssl.X509HostnameVerifier)>(\"TLS\", null, null, null, null, r1, $r2)\"],\"<init>.9\":null,\"<init>.3\":[\"specialinvoke r0.<java.lang.Object: void <init>()>()\", \"if r1 != null goto $r3 = virtualinvoke r1.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>()\", \"$r4 = new java.lang.IllegalArgumentException\", \"specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(\"SSL context may not be null\")\", \"throw $r4\", \"$r3 = virtualinvoke r1.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>()\", \"r0.<org.apache.http.conn.ssl.SSLSocketFactory: javax.net.ssl.SSLSocketFactory socketfactory> = $r3\", \"r0.<org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.X509HostnameVerifier hostnameVerifier> = r2\", \"r0.<org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.scheme.HostNameResolver nameResolver> = null\"],\"<init>.3\":[\"specialinvoke r0.<java.lang.Object: void <init>()>()\", \"if r1 != null goto r0.<org.apache.http.conn.ssl.SSLSocketFactory: javax.net.ssl.SSLSocketFactory socketfactory> = r1\", \"$r3 = new java.lang.IllegalArgumentException\", \"specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(\"SSL socket factory may not be null\")\", \"throw $r3\", \"r0.<org.apache.http.conn.ssl.SSLSocketFactory: javax.net.ssl.SSLSocketFactory socketfactory> = r1\", \"r0.<org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.X509HostnameVerifier hostnameVerifier> = r2\", \"r0.<org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.scheme.HostNameResolver nameResolver> = null\"],\"createSocket.2\":[\"$r3 = r0.<org.apache.http.conn.ssl.SSLSocketFactory: javax.net.ssl.SSLSocketFactory socketfactory>\", \"$r4 = virtualinvoke $r3.<javax.net.ssl.SSLSocketFactory: java.net.Socket createSocket()>()\", \"r2 = (javax.net.ssl.SSLSocket) $r4\", \"virtualinvoke r0.<org.apache.http.conn.ssl.SSLSocketFactory: void prepareSocket(javax.net.ssl.SSLSocket)>(r2)\", \"return r2\"],\"createSocket.1\":[\"$r2 = r0.<org.apache.http.conn.ssl.SSLSocketFactory: javax.net.ssl.SSLSocketFactory socketfactory>\", \"$r3 = virtualinvoke $r2.<javax.net.ssl.SSLSocketFactory: java.net.Socket createSocket()>()\", \"r1 = (javax.net.ssl.SSLSocket) $r3\", \"virtualinvoke r0.<org.apache.http.conn.ssl.SSLSocketFactory: void prepareSocket(javax.net.ssl.SSLSocket)>(r1)\", \"return r1\"],\"connectSocket.5\":[\"if r2 != null goto (branch)\", \"$r15 = new java.lang.IllegalArgumentException\", \"specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(\"Remote address may not be null\")\", \"throw $r15\", \"if r4 != null goto (branch)\", \"$r14 = new java.lang.IllegalArgumentException\", \"specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(\"HTTP parameters may not be null\")\", \"throw $r14\", \"if r1 == null goto $r7 = r0.<org.apache.http.conn.ssl.SSLSocketFactory: javax.net.ssl.SSLSocketFactory socketfactory>\", \"$r25 = r1\", \"goto [?= r5 = $r25]\", \"$r7 = r0.<org.apache.http.conn.ssl.SSLSocketFactory: javax.net.ssl.SSLSocketFactory socketfactory>\", \"$r25 = virtualinvoke $r7.<javax.net.ssl.SSLSocketFactory: java.net.Socket createSocket()>()\", \"r5 = $r25\", \"if r3 == null goto i0 = staticinvoke <org.apache.http.params.HttpConnectionParams: int getConnectionTimeout(org.apache.http.params.HttpParams)>(r4)\", \"$z2 = staticinvoke <org.apache.http.params.HttpConnectionParams: boolean getSoReuseaddr(org.apache.http.params.HttpParams)>(r4)\", \"virtualinvoke $r25.<java.net.Socket: void setReuseAddress(boolean)>($z2)\", \"virtualinvoke $r25.<java.net.Socket: void bind(java.net.SocketAddress)>(r3)\", \"i0 = staticinvoke <org.apache.http.params.HttpConnectionParams: int getConnectionTimeout(org.apache.http.params.HttpParams)>(r4)\", \"i1 = staticinvoke <org.apache.http.params.HttpConnectionParams: int getSoTimeout(org.apache.http.params.HttpParams)>(r4)\", \"virtualinvoke r5.<java.net.Socket: void setSoTimeout(int)>(i1)\", \"virtualinvoke r5.<java.net.Socket: void connect(java.net.SocketAddress,int)>(r2, i0)\", \"goto [?= $z0 = r2 instanceof org.apache.http.conn.HttpInetSocketAddress]\", \"$r17 := @caughtexception\", \"$r18 = new org.apache.http.conn.ConnectTimeoutException\", \"$r19 = new java.lang.StringBuilder\", \"specialinvoke $r19.<java.lang.StringBuilder: void <init>()>()\", \"$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Connect to \")\", \"$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2)\", \"$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" timed out\")\", \"$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>()\", \"specialinvoke $r18.<org.apache.http.conn.ConnectTimeoutException: void <init>(java.lang.String)>($r23)\", \"throw $r18\"],\"connectSocket.39\":[\"if $z0 == 0 goto r27 = virtualinvoke r2.<java.net.InetSocketAddress: java.lang.String getHostName()>()\", \"$r12 = (org.apache.http.conn.HttpInetSocketAddress) r2\", \"$r13 = virtualinvoke $r12.<org.apache.http.conn.HttpInetSocketAddress: org.apache.http.HttpHost getHttpHost()>()\", \"r27 = virtualinvoke $r13.<org.apache.http.HttpHost: java.lang.String getHostName()>()\", \"goto [?= $z1 = r5 instanceof javax.net.ssl.SSLSocket]\", \"r27 = virtualinvoke r2.<java.net.InetSocketAddress: java.lang.String getHostName()>()\", \"$z1 = r5 instanceof javax.net.ssl.SSLSocket\", \"if $z1 == 0 goto i2 = virtualinvoke r2.<java.net.InetSocketAddress: int getPort()>()\", \"r28 = (javax.net.ssl.SSLSocket) r5\", \"goto [?= $r10 = r0.<org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.X509HostnameVerifier hostnameVerifier>]\", \"i2 = virtualinvoke r2.<java.net.InetSocketAddress: int getPort()>()\", \"$r8 = r0.<org.apache.http.conn.ssl.SSLSocketFactory: javax.net.ssl.SSLSocketFactory socketfactory>\", \"$r9 = virtualinvoke $r8.<javax.net.ssl.SSLSocketFactory: java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean)>(r5, r27, i2, 1)\", \"r28 = (javax.net.ssl.SSLSocket) $r9\", \"virtualinvoke r0.<org.apache.http.conn.ssl.SSLSocketFactory: void prepareSocket(javax.net.ssl.SSLSocket)>(r28)\", \"$r10 = r0.<org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.X509HostnameVerifier hostnameVerifier>\", \"if $r10 == null goto return r28\", \"$r11 = r0.<org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.X509HostnameVerifier hostnameVerifier>\", \"interfaceinvoke $r11.<org.apache.http.conn.ssl.X509HostnameVerifier: void verify(java.lang.String,javax.net.ssl.SSLSocket)>(r27, r28)\", \"goto [?= return r28]\", \"$r16 := @caughtexception\", \"virtualinvoke r28.<javax.net.ssl.SSLSocket: void close()>()\", \"goto [?= throw $r16]\", \"$r24 := @caughtexception\", \"throw $r16\", \"return r28\"],\"isSecure.2\":[\"if r1 != null goto $z0 = r1 instanceof javax.net.ssl.SSLSocket\", \"$r4 = new java.lang.IllegalArgumentException\", \"specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(\"Socket may not be null\")\", \"throw $r4\"],\"isSecure.7\":[\"if $z0 != 0 goto $z1 = virtualinvoke r1.<java.net.Socket: boolean isClosed()>()\", \"$r3 = new java.lang.IllegalArgumentException\", \"specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(\"Socket not created by this factory\")\", \"throw $r3\"],\"isSecure.12\":[\"if $z1 == 0 goto return 1\", \"$r2 = new java.lang.IllegalArgumentException\", \"specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(\"Socket is closed\")\", \"throw $r2\"],\"createLayeredSocket.5\":[\"$r5 = r0.<org.apache.http.conn.ssl.SSLSocketFactory: javax.net.ssl.SSLSocketFactory socketfactory>\", \"$r6 = virtualinvoke $r5.<javax.net.ssl.SSLSocketFactory: java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean)>(r1, r2, i0, 1)\", \"r4 = (javax.net.ssl.SSLSocket) $r6\", \"virtualinvoke r0.<org.apache.http.conn.ssl.SSLSocketFactory: void prepareSocket(javax.net.ssl.SSLSocket)>(r4)\", \"$r7 = r0.<org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.X509HostnameVerifier hostnameVerifier>\", \"if $r7 == null goto return r4\", \"$r8 = r0.<org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.X509HostnameVerifier hostnameVerifier>\", \"interfaceinvoke $r8.<org.apache.http.conn.ssl.X509HostnameVerifier: void verify(java.lang.String,javax.net.ssl.SSLSocket)>(r2, r4)\", \"return r4\"],\"createLayeredSocket.5\":[\"$r4 = r0.<org.apache.http.conn.ssl.SSLSocketFactory: javax.net.ssl.SSLSocketFactory socketfactory>\", \"$r5 = virtualinvoke $r4.<javax.net.ssl.SSLSocketFactory: java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean)>(r1, r2, i0, z0)\", \"r3 = (javax.net.ssl.SSLSocket) $r5\", \"virtualinvoke r0.<org.apache.http.conn.ssl.SSLSocketFactory: void prepareSocket(javax.net.ssl.SSLSocket)>(r3)\", \"$r6 = r0.<org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.X509HostnameVerifier hostnameVerifier>\", \"if $r6 == null goto return r3\", \"$r7 = r0.<org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.X509HostnameVerifier hostnameVerifier>\", \"interfaceinvoke $r7.<org.apache.http.conn.ssl.X509HostnameVerifier: void verify(java.lang.String,javax.net.ssl.SSLSocket)>(r2, r3)\", \"return r3\"],\"setHostnameVerifier.2\":[\"if r1 != null goto r0.<org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.X509HostnameVerifier hostnameVerifier> = r1\", \"$r2 = new java.lang.IllegalArgumentException\", \"specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(\"Hostname verifier may not be null\")\", \"throw $r2\"],\"connectSocket.7\":null,\"connectSocket.8\":[\"if r3 != null goto (branch)\", \"if i1 <= 0 goto $r12 = r0.<org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.scheme.HostNameResolver nameResolver>\", \"if i1 >= 0 goto $r6 = new java.net.InetSocketAddress\", \"i1 = 0\", \"$r6 = new java.net.InetSocketAddress\", \"specialinvoke $r6.<java.net.InetSocketAddress: void <init>(java.net.InetAddress,int)>(r3, i1)\", \"r11 = $r6\", \"$r12 = r0.<org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.scheme.HostNameResolver nameResolver>\", \"if $r12 == null goto r13 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>(r2)\", \"$r10 = r0.<org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.scheme.HostNameResolver nameResolver>\", \"r13 = interfaceinvoke $r10.<org.apache.http.conn.scheme.HostNameResolver: java.net.InetAddress resolve(java.lang.String)>(r2)\", \"goto [?= $r7 = new org.apache.http.conn.HttpInetSocketAddress]\", \"r13 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>(r2)\", \"$r7 = new org.apache.http.conn.HttpInetSocketAddress\", \"$r8 = new org.apache.http.HttpHost\", \"specialinvoke $r8.<org.apache.http.HttpHost: void <init>(java.lang.String,int)>(r2, i0)\", \"specialinvoke $r7.<org.apache.http.conn.HttpInetSocketAddress: void <init>(org.apache.http.HttpHost,java.net.InetAddress,int)>($r8, r13, i0)\", \"$r9 = virtualinvoke r0.<org.apache.http.conn.ssl.SSLSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>(r1, $r7, r11, r4)\", \"return $r9\"],\"<clinit>.9\":[\"$r3 = \"\"\", \"$r4 = virtualinvoke $r3.<java.lang.String: char[] toCharArray()>()\", \"<org.apache.http.conn.ssl.SSLSocketFactory: char[] EMPTY_PASSWORD> = $r4\"],\"split\":null,\"<init>\":null,\"<init>\":null,\"internalPrepareSocket\":null,\"createSocket\":null,\"connectSocket\":null,\"createLayeredSocket\":null,\"verifyHostname\":null},\"rhs\" : {\"modifier\":131073,\"interfaces\":[\"LayeredConnectionSocketFactory\", \"SchemeLayeredSocketFactory\", \"LayeredSchemeSocketFactory\", \"LayeredSocketFactory\"],\"EMPTY_PASSWORD\":null,\"supportedProtocols\":\"<org.apache.http.conn.ssl.SSLSocketFactory: java.lang.String[] supportedProtocols>\",\"supportedCipherSuites\":\"<org.apache.http.conn.ssl.SSLSocketFactory: java.lang.String[] supportedCipherSuites>\",\"getSocketFactory.1\":[\"$r1 = staticinvoke <org.apache.http.conn.ssl.SSLContexts: javax.net.ssl.SSLContext createDefault()>()\", \"$r2 = <org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.X509HostnameVerifier BROWSER_COMPATIBLE_HOSTNAME_VERIFIER>\", \"specialinvoke $r0.<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(javax.net.ssl.SSLContext,org.apache.http.conn.ssl.X509HostnameVerifier)>($r1, $r2)\"],\"getSystemSocketFactory.1\":[\"$r1 = staticinvoke <javax.net.ssl.SSLSocketFactory: javax.net.SocketFactory getDefault()>()\", \"$r2 = (javax.net.ssl.SSLSocketFactory) $r1\", \"$r3 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(\"https.protocols\")\", \"$r4 = staticinvoke <org.apache.http.conn.ssl.SSLSocketFactory: java.lang.String[] split(java.lang.String)>($r3)\", \"$r5 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(\"https.cipherSuites\")\", \"$r6 = staticinvoke <org.apache.http.conn.ssl.SSLSocketFactory: java.lang.String[] split(java.lang.String)>($r5)\", \"$r7 = <org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.X509HostnameVerifier BROWSER_COMPATIBLE_HOSTNAME_VERIFIER>\", \"specialinvoke $r0.<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(javax.net.ssl.SSLSocketFactory,java.lang.String[],java.lang.String[],org.apache.http.conn.ssl.X509HostnameVerifier)>($r2, $r4, $r6, $r7)\"],\"createSSLContext\":null,\"createSystemSSLContext\":null,\"createDefaultSSLContext\":null,\"createSystemSSLContext\":null,\"<init>.7\":[\"$r7 = staticinvoke <org.apache.http.conn.ssl.SSLContexts: org.apache.http.conn.ssl.SSLContextBuilder custom()>()\", \"$r8 = virtualinvoke $r7.<org.apache.http.conn.ssl.SSLContextBuilder: org.apache.http.conn.ssl.SSLContextBuilder useProtocol(java.lang.String)>(r1)\", \"$r9 = virtualinvoke $r8.<org.apache.http.conn.ssl.SSLContextBuilder: org.apache.http.conn.ssl.SSLContextBuilder setSecureRandom(java.security.SecureRandom)>(r5)\", \"if r3 == null goto $r15 = null\", \"$r15 = virtualinvoke r3.<java.lang.String: char[] toCharArray()>()\", \"goto [?= $r10 = virtualinvoke $r9.<org.apache.http.conn.ssl.SSLContextBuilder: org.apache.http.conn.ssl.SSLContextBuilder loadKeyMaterial(java.security.KeyStore,char[])>(r2, $r15)]\", \"$r15 = null\", \"$r10 = virtualinvoke $r9.<org.apache.http.conn.ssl.SSLContextBuilder: org.apache.http.conn.ssl.SSLContextBuilder loadKeyMaterial(java.security.KeyStore,char[])>(r2, $r15)\", \"$r11 = virtualinvoke $r10.<org.apache.http.conn.ssl.SSLContextBuilder: org.apache.http.conn.ssl.SSLContextBuilder loadTrustMaterial(java.security.KeyStore)>(r4)\", \"$r12 = virtualinvoke $r11.<org.apache.http.conn.ssl.SSLContextBuilder: javax.net.ssl.SSLContext build()>()\", \"specialinvoke r0.<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(javax.net.ssl.SSLContext,org.apache.http.conn.scheme.HostNameResolver)>($r12, r6)\"],\"<init>.7\":[\"$r7 = staticinvoke <org.apache.http.conn.ssl.SSLContexts: org.apache.http.conn.ssl.SSLContextBuilder custom()>()\", \"$r8 = virtualinvoke $r7.<org.apache.http.conn.ssl.SSLContextBuilder: org.apache.http.conn.ssl.SSLContextBuilder useProtocol(java.lang.String)>(r1)\", \"$r9 = virtualinvoke $r8.<org.apache.http.conn.ssl.SSLContextBuilder: org.apache.http.conn.ssl.SSLContextBuilder setSecureRandom(java.security.SecureRandom)>(r5)\", \"if r3 == null goto $r15 = null\", \"$r15 = virtualinvoke r3.<java.lang.String: char[] toCharArray()>()\", \"goto [?= $r10 = virtualinvoke $r9.<org.apache.http.conn.ssl.SSLContextBuilder: org.apache.http.conn.ssl.SSLContextBuilder loadKeyMaterial(java.security.KeyStore,char[])>(r2, $r15)]\", \"$r15 = null\", \"$r10 = virtualinvoke $r9.<org.apache.http.conn.ssl.SSLContextBuilder: org.apache.http.conn.ssl.SSLContextBuilder loadKeyMaterial(java.security.KeyStore,char[])>(r2, $r15)\", \"$r11 = virtualinvoke $r10.<org.apache.http.conn.ssl.SSLContextBuilder: org.apache.http.conn.ssl.SSLContextBuilder loadTrustMaterial(java.security.KeyStore)>(r4)\", \"$r12 = virtualinvoke $r11.<org.apache.http.conn.ssl.SSLContextBuilder: javax.net.ssl.SSLContext build()>()\", \"specialinvoke r0.<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(javax.net.ssl.SSLContext,org.apache.http.conn.ssl.X509HostnameVerifier)>($r12, r6)\"],\"<init>.8\":[\"$r8 = staticinvoke <org.apache.http.conn.ssl.SSLContexts: org.apache.http.conn.ssl.SSLContextBuilder custom()>()\", \"$r9 = virtualinvoke $r8.<org.apache.http.conn.ssl.SSLContextBuilder: org.apache.http.conn.ssl.SSLContextBuilder useProtocol(java.lang.String)>(r1)\", \"$r10 = virtualinvoke $r9.<org.apache.http.conn.ssl.SSLContextBuilder: org.apache.http.conn.ssl.SSLContextBuilder setSecureRandom(java.security.SecureRandom)>(r5)\", \"if r3 == null goto $r16 = null\", \"$r16 = virtualinvoke r3.<java.lang.String: char[] toCharArray()>()\", \"goto [?= $r11 = virtualinvoke $r10.<org.apache.http.conn.ssl.SSLContextBuilder: org.apache.http.conn.ssl.SSLContextBuilder loadKeyMaterial(java.security.KeyStore,char[])>(r2, $r16)]\", \"$r16 = null\", \"$r11 = virtualinvoke $r10.<org.apache.http.conn.ssl.SSLContextBuilder: org.apache.http.conn.ssl.SSLContextBuilder loadKeyMaterial(java.security.KeyStore,char[])>(r2, $r16)\", \"$r12 = virtualinvoke $r11.<org.apache.http.conn.ssl.SSLContextBuilder: org.apache.http.conn.ssl.SSLContextBuilder loadTrustMaterial(java.security.KeyStore,org.apache.http.conn.ssl.TrustStrategy)>(r4, r6)\", \"$r13 = virtualinvoke $r12.<org.apache.http.conn.ssl.SSLContextBuilder: javax.net.ssl.SSLContext build()>()\", \"specialinvoke r0.<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(javax.net.ssl.SSLContext,org.apache.http.conn.ssl.X509HostnameVerifier)>($r13, r7)\"],\"<init>.4\":[\"$r4 = staticinvoke <org.apache.http.conn.ssl.SSLContexts: org.apache.http.conn.ssl.SSLContextBuilder custom()>()\", \"if r2 == null goto $r11 = null\", \"$r11 = virtualinvoke r2.<java.lang.String: char[] toCharArray()>()\", \"goto [?= $r5 = virtualinvoke $r4.<org.apache.http.conn.ssl.SSLContextBuilder: org.apache.http.conn.ssl.SSLContextBuilder loadKeyMaterial(java.security.KeyStore,char[])>(r1, $r11)]\", \"$r11 = null\", \"$r5 = virtualinvoke $r4.<org.apache.http.conn.ssl.SSLContextBuilder: org.apache.http.conn.ssl.SSLContextBuilder loadKeyMaterial(java.security.KeyStore,char[])>(r1, $r11)\", \"$r6 = virtualinvoke $r5.<org.apache.http.conn.ssl.SSLContextBuilder: org.apache.http.conn.ssl.SSLContextBuilder loadTrustMaterial(java.security.KeyStore)>(r3)\", \"$r7 = virtualinvoke $r6.<org.apache.http.conn.ssl.SSLContextBuilder: javax.net.ssl.SSLContext build()>()\", \"$r8 = <org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.X509HostnameVerifier BROWSER_COMPATIBLE_HOSTNAME_VERIFIER>\", \"specialinvoke r0.<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(javax.net.ssl.SSLContext,org.apache.http.conn.ssl.X509HostnameVerifier)>($r7, $r8)\"],\"<init>.3\":[\"$r3 = staticinvoke <org.apache.http.conn.ssl.SSLContexts: org.apache.http.conn.ssl.SSLContextBuilder custom()>()\", \"if r2 == null goto $r9 = null\", \"$r9 = virtualinvoke r2.<java.lang.String: char[] toCharArray()>()\", \"goto [?= $r4 = virtualinvoke $r3.<org.apache.http.conn.ssl.SSLContextBuilder: org.apache.http.conn.ssl.SSLContextBuilder loadKeyMaterial(java.security.KeyStore,char[])>(r1, $r9)]\", \"$r9 = null\", \"$r4 = virtualinvoke $r3.<org.apache.http.conn.ssl.SSLContextBuilder: org.apache.http.conn.ssl.SSLContextBuilder loadKeyMaterial(java.security.KeyStore,char[])>(r1, $r9)\", \"$r5 = virtualinvoke $r4.<org.apache.http.conn.ssl.SSLContextBuilder: javax.net.ssl.SSLContext build()>()\", \"$r6 = <org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.X509HostnameVerifier BROWSER_COMPATIBLE_HOSTNAME_VERIFIER>\", \"specialinvoke r0.<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(javax.net.ssl.SSLContext,org.apache.http.conn.ssl.X509HostnameVerifier)>($r5, $r6)\"],\"<init>.2\":[\"$r2 = staticinvoke <org.apache.http.conn.ssl.SSLContexts: org.apache.http.conn.ssl.SSLContextBuilder custom()>()\", \"$r3 = virtualinvoke $r2.<org.apache.http.conn.ssl.SSLContextBuilder: org.apache.http.conn.ssl.SSLContextBuilder loadTrustMaterial(java.security.KeyStore)>(r1)\", \"$r4 = virtualinvoke $r3.<org.apache.http.conn.ssl.SSLContextBuilder: javax.net.ssl.SSLContext build()>()\", \"$r5 = <org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.X509HostnameVerifier BROWSER_COMPATIBLE_HOSTNAME_VERIFIER>\", \"specialinvoke r0.<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(javax.net.ssl.SSLContext,org.apache.http.conn.ssl.X509HostnameVerifier)>($r4, $r5)\"],\"<init>.3\":[\"$r3 = staticinvoke <org.apache.http.conn.ssl.SSLContexts: org.apache.http.conn.ssl.SSLContextBuilder custom()>()\", \"$r4 = virtualinvoke $r3.<org.apache.http.conn.ssl.SSLContextBuilder: org.apache.http.conn.ssl.SSLContextBuilder loadTrustMaterial(java.security.KeyStore,org.apache.http.conn.ssl.TrustStrategy)>(null, r1)\", \"$r5 = virtualinvoke $r4.<org.apache.http.conn.ssl.SSLContextBuilder: javax.net.ssl.SSLContext build()>()\", \"specialinvoke r0.<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(javax.net.ssl.SSLContext,org.apache.http.conn.ssl.X509HostnameVerifier)>($r5, r2)\"],\"<init>.2\":[\"$r2 = staticinvoke <org.apache.http.conn.ssl.SSLContexts: org.apache.http.conn.ssl.SSLContextBuilder custom()>()\", \"$r3 = virtualinvoke $r2.<org.apache.http.conn.ssl.SSLContextBuilder: org.apache.http.conn.ssl.SSLContextBuilder loadTrustMaterial(java.security.KeyStore,org.apache.http.conn.ssl.TrustStrategy)>(null, r1)\", \"$r4 = virtualinvoke $r3.<org.apache.http.conn.ssl.SSLContextBuilder: javax.net.ssl.SSLContext build()>()\", \"$r5 = <org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.X509HostnameVerifier BROWSER_COMPATIBLE_HOSTNAME_VERIFIER>\", \"specialinvoke r0.<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(javax.net.ssl.SSLContext,org.apache.http.conn.ssl.X509HostnameVerifier)>($r4, $r5)\"],\"<init>.9\":[\"r0.<org.apache.http.conn.ssl.SSLSocketFactory: java.lang.String[] supportedProtocols> = null\", \"r0.<org.apache.http.conn.ssl.SSLSocketFactory: java.lang.String[] supportedCipherSuites> = null\"],\"<init>.3\":[\"$r3 = staticinvoke <org.apache.http.util.Args: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, \"SSL context\")\", \"$r4 = (javax.net.ssl.SSLContext) $r3\", \"$r5 = virtualinvoke $r4.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>()\", \"specialinvoke r0.<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(javax.net.ssl.SSLSocketFactory,java.lang.String[],java.lang.String[],org.apache.http.conn.ssl.X509HostnameVerifier)>($r5, null, null, r2)\"],\"<init>.3\":[\"specialinvoke r0.<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(javax.net.ssl.SSLSocketFactory,java.lang.String[],java.lang.String[],org.apache.http.conn.ssl.X509HostnameVerifier)>(r1, null, null, r2)\"],\"createSocket.2\":[\"$r2 = (org.apache.http.protocol.HttpContext) null\", \"$r3 = virtualinvoke r0.<org.apache.http.conn.ssl.SSLSocketFactory: java.net.Socket createSocket(org.apache.http.protocol.HttpContext)>($r2)\", \"return $r3\"],\"createSocket.1\":[\"$r1 = (org.apache.http.protocol.HttpContext) null\", \"$r2 = virtualinvoke r0.<org.apache.http.conn.ssl.SSLSocketFactory: java.net.Socket createSocket(org.apache.http.protocol.HttpContext)>($r1)\", \"return $r2\"],\"connectSocket.5\":[\"staticinvoke <org.apache.http.util.Args: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, \"Remote address\")\", \"staticinvoke <org.apache.http.util.Args: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r4, \"HTTP parameters\")\"],\"connectSocket.39\":[\"if $z0 == 0 goto $r7 = new org.apache.http.HttpHost\", \"$r10 = (org.apache.http.conn.HttpInetSocketAddress) r2\", \"r11 = virtualinvoke $r10.<org.apache.http.conn.HttpInetSocketAddress: org.apache.http.HttpHost getHttpHost()>()\", \"goto [?= i0 = staticinvoke <org.apache.http.params.HttpConnectionParams: int getSoTimeout(org.apache.http.params.HttpParams)>(r4)]\", \"$r7 = new org.apache.http.HttpHost\", \"$r8 = virtualinvoke r2.<java.net.InetSocketAddress: java.lang.String getHostName()>()\", \"$i2 = virtualinvoke r2.<java.net.InetSocketAddress: int getPort()>()\", \"specialinvoke $r7.<org.apache.http.HttpHost: void <init>(java.lang.String,int,java.lang.String)>($r8, $i2, \"https\")\", \"r11 = $r7\", \"i0 = staticinvoke <org.apache.http.params.HttpConnectionParams: int getSoTimeout(org.apache.http.params.HttpParams)>(r4)\", \"i1 = staticinvoke <org.apache.http.params.HttpConnectionParams: int getConnectionTimeout(org.apache.http.params.HttpParams)>(r4)\", \"virtualinvoke r1.<java.net.Socket: void setSoTimeout(int)>(i0)\", \"$r9 = virtualinvoke r0.<org.apache.http.conn.ssl.SSLSocketFactory: java.net.Socket connectSocket(int,java.net.Socket,org.apache.http.HttpHost,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.protocol.HttpContext)>(i1, r1, r11, r2, r3, null)\", \"return $r9\"],\"isSecure.2\":[\"staticinvoke <org.apache.http.util.Args: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, \"Socket\")\"],\"isSecure.7\":[\"staticinvoke <org.apache.http.util.Asserts: void check(boolean,java.lang.String)>($z0, \"Socket not created by this factory\")\"],\"isSecure.12\":[\"if $z1 != 0 goto $z2 = 0\", \"$z2 = 1\", \"goto [?= staticinvoke <org.apache.http.util.Asserts: void check(boolean,java.lang.String)>($z2, \"Socket is closed\")]\", \"$z2 = 0\", \"staticinvoke <org.apache.http.util.Asserts: void check(boolean,java.lang.String)>($z2, \"Socket is closed\")\"],\"createLayeredSocket.5\":[\"$r4 = (org.apache.http.protocol.HttpContext) null\", \"$r5 = virtualinvoke r0.<org.apache.http.conn.ssl.SSLSocketFactory: java.net.Socket createLayeredSocket(java.net.Socket,java.lang.String,int,org.apache.http.protocol.HttpContext)>(r1, r2, i0, $r4)\", \"return $r5\"],\"createLayeredSocket.5\":[\"$r3 = (org.apache.http.protocol.HttpContext) null\", \"$r4 = virtualinvoke r0.<org.apache.http.conn.ssl.SSLSocketFactory: java.net.Socket createLayeredSocket(java.net.Socket,java.lang.String,int,org.apache.http.protocol.HttpContext)>(r1, r2, i0, $r3)\", \"return $r4\"],\"setHostnameVerifier.2\":[\"staticinvoke <org.apache.http.util.Args: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, \"Hostname verifier\")\"],\"connectSocket.7\":[\"$r6 = r0.<org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.scheme.HostNameResolver nameResolver>\", \"if $r6 == null goto r10 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>(r2)\", \"$r9 = r0.<org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.scheme.HostNameResolver nameResolver>\", \"r10 = interfaceinvoke $r9.<org.apache.http.conn.scheme.HostNameResolver: java.net.InetAddress resolve(java.lang.String)>(r2)\", \"goto [?= r11 = null]\", \"r10 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>(r2)\"],\"connectSocket.8\":[\"if r3 != null goto r15 = new java.net.InetSocketAddress\", \"if i1 <= 0 goto r17 = new org.apache.http.conn.HttpInetSocketAddress\", \"r15 = new java.net.InetSocketAddress\", \"if i1 <= 0 goto $i2 = 0\", \"$i2 = i1\", \"goto [?= specialinvoke r15.<java.net.InetSocketAddress: void <init>(java.net.InetAddress,int)>(r3, $i2)]\", \"$i2 = 0\", \"specialinvoke r15.<java.net.InetSocketAddress: void <init>(java.net.InetAddress,int)>(r3, $i2)\", \"r11 = r15\", \"r17 = new org.apache.http.conn.HttpInetSocketAddress\", \"r16 = new org.apache.http.HttpHost\", \"specialinvoke r16.<org.apache.http.HttpHost: void <init>(java.lang.String,int)>(r2, i0)\", \"specialinvoke r17.<org.apache.http.conn.HttpInetSocketAddress: void <init>(org.apache.http.HttpHost,java.net.InetAddress,int)>(r16, r10, i0)\", \"r18 = (java.net.InetSocketAddress) r17\", \"$r14 = virtualinvoke r0.<org.apache.http.conn.ssl.SSLSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>(r1, r18, r11, r4)\", \"return $r14\"],\"<clinit>.9\":null,\"split\":\"<org.apache.http.conn.ssl.SSLSocketFactory: java.lang.String[] split(java.lang.String)>\",\"<init>\":\"<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(javax.net.ssl.SSLContext,java.lang.String[],java.lang.String[],org.apache.http.conn.ssl.X509HostnameVerifier)>\",\"<init>\":\"<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(javax.net.ssl.SSLSocketFactory,java.lang.String[],java.lang.String[],org.apache.http.conn.ssl.X509HostnameVerifier)>\",\"internalPrepareSocket\":\"<org.apache.http.conn.ssl.SSLSocketFactory: void internalPrepareSocket(javax.net.ssl.SSLSocket)>\",\"createSocket\":\"<org.apache.http.conn.ssl.SSLSocketFactory: java.net.Socket createSocket(org.apache.http.protocol.HttpContext)>\",\"connectSocket\":\"<org.apache.http.conn.ssl.SSLSocketFactory: java.net.Socket connectSocket(int,java.net.Socket,org.apache.http.HttpHost,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.protocol.HttpContext)>\",\"createLayeredSocket\":\"<org.apache.http.conn.ssl.SSLSocketFactory: java.net.Socket createLayeredSocket(java.net.Socket,java.lang.String,int,org.apache.http.protocol.HttpContext)>\",\"verifyHostname\":\"<org.apache.http.conn.ssl.SSLSocketFactory: void verifyHostname(javax.net.ssl.SSLSocket,java.lang.String)>\"}}"
        },
        {
            "contained": true,
            "commit": "1576362",
            "qname": "org.apache.http.conn.ssl.SSLSocketFactory",
            "affectedFile": "-deprecated/org/apache/http/conn/ssl/SSLSocketFactory.class",
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/1576362/org/apache/http/conn/ssl/SSLSocketFactory.class",
            "diff": "{\"lhs\" : {\"modifier\":1,\"interfaces\":[\"SchemeLayeredSocketFactory\", \"LayeredSchemeSocketFactory\", \"LayeredSocketFactory\"],\"EMPTY_PASSWORD\":\"<org.apache.http.conn.ssl.SSLSocketFactory: char[] EMPTY_PASSWORD>\",\"supportedProtocols\":null,\"supportedCipherSuites\":null,\"getSocketFactory.1\":[\"$r1 = staticinvoke <org.apache.http.conn.ssl.SSLSocketFactory: javax.net.ssl.SSLContext createDefaultSSLContext()>()\", \"specialinvoke $r0.<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(javax.net.ssl.SSLContext)>($r1)\"],\"getSystemSocketFactory.1\":[\"$r1 = staticinvoke <org.apache.http.conn.ssl.SSLSocketFactory: javax.net.ssl.SSLContext createSystemSSLContext()>()\", \"specialinvoke $r0.<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(javax.net.ssl.SSLContext)>($r1)\"],\"createSSLContext\":\"<org.apache.http.conn.ssl.SSLSocketFactory: javax.net.ssl.SSLContext createSSLContext(java.lang.String,java.security.KeyStore,java.lang.String,java.security.KeyStore,java.security.SecureRandom,org.apache.http.conn.ssl.TrustStrategy)>\",\"createSystemSSLContext\":\"<org.apache.http.conn.ssl.SSLSocketFactory: javax.net.ssl.SSLContext createSystemSSLContext(java.lang.String,java.security.SecureRandom)>\",\"createDefaultSSLContext\":\"<org.apache.http.conn.ssl.SSLSocketFactory: javax.net.ssl.SSLContext createDefaultSSLContext()>\",\"createSystemSSLContext\":\"<org.apache.http.conn.ssl.SSLSocketFactory: javax.net.ssl.SSLContext createSystemSSLContext()>\",\"<init>.7\":[\"$r7 = staticinvoke <org.apache.http.conn.ssl.SSLSocketFactory: javax.net.ssl.SSLContext createSSLContext(java.lang.String,java.security.KeyStore,java.lang.String,java.security.KeyStore,java.security.SecureRandom,org.apache.http.conn.ssl.TrustStrategy)>(r1, r2, r3, r4, r5, null)\", \"specialinvoke r0.<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(javax.net.ssl.SSLContext,org.apache.http.conn.scheme.HostNameResolver)>($r7, r6)\"],\"<init>.7\":[\"$r7 = staticinvoke <org.apache.http.conn.ssl.SSLSocketFactory: javax.net.ssl.SSLContext createSSLContext(java.lang.String,java.security.KeyStore,java.lang.String,java.security.KeyStore,java.security.SecureRandom,org.apache.http.conn.ssl.TrustStrategy)>(r1, r2, r3, r4, r5, null)\", \"specialinvoke r0.<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(javax.net.ssl.SSLContext,org.apache.http.conn.ssl.X509HostnameVerifier)>($r7, r6)\"],\"<init>.8\":[\"$r8 = staticinvoke <org.apache.http.conn.ssl.SSLSocketFactory: javax.net.ssl.SSLContext createSSLContext(java.lang.String,java.security.KeyStore,java.lang.String,java.security.KeyStore,java.security.SecureRandom,org.apache.http.conn.ssl.TrustStrategy)>(r1, r2, r3, r4, r5, r6)\", \"specialinvoke r0.<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(javax.net.ssl.SSLContext,org.apache.http.conn.ssl.X509HostnameVerifier)>($r8, r7)\"],\"<init>.4\":[\"$r4 = <org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.X509HostnameVerifier BROWSER_COMPATIBLE_HOSTNAME_VERIFIER>\", \"specialinvoke r0.<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(java.lang.String,java.security.KeyStore,java.lang.String,java.security.KeyStore,java.security.SecureRandom,org.apache.http.conn.ssl.TrustStrategy,org.apache.http.conn.ssl.X509HostnameVerifier)>(\"TLS\", r1, r2, r3, null, null, $r4)\"],\"<init>.3\":[\"$r3 = <org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.X509HostnameVerifier BROWSER_COMPATIBLE_HOSTNAME_VERIFIER>\", \"specialinvoke r0.<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(java.lang.String,java.security.KeyStore,java.lang.String,java.security.KeyStore,java.security.SecureRandom,org.apache.http.conn.ssl.TrustStrategy,org.apache.http.conn.ssl.X509HostnameVerifier)>(\"TLS\", r1, r2, null, null, null, $r3)\"],\"<init>.2\":[\"$r2 = <org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.X509HostnameVerifier BROWSER_COMPATIBLE_HOSTNAME_VERIFIER>\", \"specialinvoke r0.<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(java.lang.String,java.security.KeyStore,java.lang.String,java.security.KeyStore,java.security.SecureRandom,org.apache.http.conn.ssl.TrustStrategy,org.apache.http.conn.ssl.X509HostnameVerifier)>(\"TLS\", null, null, r1, null, null, $r2)\"],\"<init>.3\":[\"specialinvoke r0.<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(java.lang.String,java.security.KeyStore,java.lang.String,java.security.KeyStore,java.security.SecureRandom,org.apache.http.conn.ssl.TrustStrategy,org.apache.http.conn.ssl.X509HostnameVerifier)>(\"TLS\", null, null, null, null, r1, r2)\"],\"<init>.2\":[\"$r2 = <org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.X509HostnameVerifier BROWSER_COMPATIBLE_HOSTNAME_VERIFIER>\", \"specialinvoke r0.<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(java.lang.String,java.security.KeyStore,java.lang.String,java.security.KeyStore,java.security.SecureRandom,org.apache.http.conn.ssl.TrustStrategy,org.apache.http.conn.ssl.X509HostnameVerifier)>(\"TLS\", null, null, null, null, r1, $r2)\"],\"<init>.9\":null,\"<init>.3\":[\"specialinvoke r0.<java.lang.Object: void <init>()>()\", \"if r1 != null goto $r3 = virtualinvoke r1.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>()\", \"$r4 = new java.lang.IllegalArgumentException\", \"specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(\"SSL context may not be null\")\", \"throw $r4\", \"$r3 = virtualinvoke r1.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>()\", \"r0.<org.apache.http.conn.ssl.SSLSocketFactory: javax.net.ssl.SSLSocketFactory socketfactory> = $r3\", \"r0.<org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.X509HostnameVerifier hostnameVerifier> = r2\", \"r0.<org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.scheme.HostNameResolver nameResolver> = null\"],\"<init>.3\":[\"specialinvoke r0.<java.lang.Object: void <init>()>()\", \"if r1 != null goto r0.<org.apache.http.conn.ssl.SSLSocketFactory: javax.net.ssl.SSLSocketFactory socketfactory> = r1\", \"$r3 = new java.lang.IllegalArgumentException\", \"specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(\"SSL socket factory may not be null\")\", \"throw $r3\", \"r0.<org.apache.http.conn.ssl.SSLSocketFactory: javax.net.ssl.SSLSocketFactory socketfactory> = r1\", \"r0.<org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.X509HostnameVerifier hostnameVerifier> = r2\", \"r0.<org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.scheme.HostNameResolver nameResolver> = null\"],\"createSocket.2\":[\"$r3 = r0.<org.apache.http.conn.ssl.SSLSocketFactory: javax.net.ssl.SSLSocketFactory socketfactory>\", \"$r4 = virtualinvoke $r3.<javax.net.ssl.SSLSocketFactory: java.net.Socket createSocket()>()\", \"r2 = (javax.net.ssl.SSLSocket) $r4\", \"virtualinvoke r0.<org.apache.http.conn.ssl.SSLSocketFactory: void prepareSocket(javax.net.ssl.SSLSocket)>(r2)\", \"return r2\"],\"createSocket.1\":[\"$r2 = r0.<org.apache.http.conn.ssl.SSLSocketFactory: javax.net.ssl.SSLSocketFactory socketfactory>\", \"$r3 = virtualinvoke $r2.<javax.net.ssl.SSLSocketFactory: java.net.Socket createSocket()>()\", \"r1 = (javax.net.ssl.SSLSocket) $r3\", \"virtualinvoke r0.<org.apache.http.conn.ssl.SSLSocketFactory: void prepareSocket(javax.net.ssl.SSLSocket)>(r1)\", \"return r1\"],\"connectSocket.5\":[\"if r2 != null goto (branch)\", \"$r15 = new java.lang.IllegalArgumentException\", \"specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(\"Remote address may not be null\")\", \"throw $r15\", \"if r4 != null goto (branch)\", \"$r14 = new java.lang.IllegalArgumentException\", \"specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(\"HTTP parameters may not be null\")\", \"throw $r14\", \"if r1 == null goto $r7 = r0.<org.apache.http.conn.ssl.SSLSocketFactory: javax.net.ssl.SSLSocketFactory socketfactory>\", \"$r25 = r1\", \"goto [?= r5 = $r25]\", \"$r7 = r0.<org.apache.http.conn.ssl.SSLSocketFactory: javax.net.ssl.SSLSocketFactory socketfactory>\", \"$r25 = virtualinvoke $r7.<javax.net.ssl.SSLSocketFactory: java.net.Socket createSocket()>()\", \"r5 = $r25\", \"if r3 == null goto i0 = staticinvoke <org.apache.http.params.HttpConnectionParams: int getConnectionTimeout(org.apache.http.params.HttpParams)>(r4)\", \"$z2 = staticinvoke <org.apache.http.params.HttpConnectionParams: boolean getSoReuseaddr(org.apache.http.params.HttpParams)>(r4)\", \"virtualinvoke $r25.<java.net.Socket: void setReuseAddress(boolean)>($z2)\", \"virtualinvoke $r25.<java.net.Socket: void bind(java.net.SocketAddress)>(r3)\", \"i0 = staticinvoke <org.apache.http.params.HttpConnectionParams: int getConnectionTimeout(org.apache.http.params.HttpParams)>(r4)\", \"i1 = staticinvoke <org.apache.http.params.HttpConnectionParams: int getSoTimeout(org.apache.http.params.HttpParams)>(r4)\", \"virtualinvoke r5.<java.net.Socket: void setSoTimeout(int)>(i1)\", \"virtualinvoke r5.<java.net.Socket: void connect(java.net.SocketAddress,int)>(r2, i0)\", \"goto [?= $z0 = r2 instanceof org.apache.http.conn.HttpInetSocketAddress]\", \"$r17 := @caughtexception\", \"$r18 = new org.apache.http.conn.ConnectTimeoutException\", \"$r19 = new java.lang.StringBuilder\", \"specialinvoke $r19.<java.lang.StringBuilder: void <init>()>()\", \"$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Connect to \")\", \"$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2)\", \"$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" timed out\")\", \"$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>()\", \"specialinvoke $r18.<org.apache.http.conn.ConnectTimeoutException: void <init>(java.lang.String)>($r23)\", \"throw $r18\"],\"connectSocket.39\":[\"if $z0 == 0 goto r27 = virtualinvoke r2.<java.net.InetSocketAddress: java.lang.String getHostName()>()\", \"$r12 = (org.apache.http.conn.HttpInetSocketAddress) r2\", \"$r13 = virtualinvoke $r12.<org.apache.http.conn.HttpInetSocketAddress: org.apache.http.HttpHost getHttpHost()>()\", \"r27 = virtualinvoke $r13.<org.apache.http.HttpHost: java.lang.String getHostName()>()\", \"goto [?= $z1 = r5 instanceof javax.net.ssl.SSLSocket]\", \"r27 = virtualinvoke r2.<java.net.InetSocketAddress: java.lang.String getHostName()>()\", \"$z1 = r5 instanceof javax.net.ssl.SSLSocket\", \"if $z1 == 0 goto i2 = virtualinvoke r2.<java.net.InetSocketAddress: int getPort()>()\", \"r28 = (javax.net.ssl.SSLSocket) r5\", \"goto [?= $r10 = r0.<org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.X509HostnameVerifier hostnameVerifier>]\", \"i2 = virtualinvoke r2.<java.net.InetSocketAddress: int getPort()>()\", \"$r8 = r0.<org.apache.http.conn.ssl.SSLSocketFactory: javax.net.ssl.SSLSocketFactory socketfactory>\", \"$r9 = virtualinvoke $r8.<javax.net.ssl.SSLSocketFactory: java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean)>(r5, r27, i2, 1)\", \"r28 = (javax.net.ssl.SSLSocket) $r9\", \"virtualinvoke r0.<org.apache.http.conn.ssl.SSLSocketFactory: void prepareSocket(javax.net.ssl.SSLSocket)>(r28)\", \"$r10 = r0.<org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.X509HostnameVerifier hostnameVerifier>\", \"if $r10 == null goto return r28\", \"$r11 = r0.<org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.X509HostnameVerifier hostnameVerifier>\", \"interfaceinvoke $r11.<org.apache.http.conn.ssl.X509HostnameVerifier: void verify(java.lang.String,javax.net.ssl.SSLSocket)>(r27, r28)\", \"goto [?= return r28]\", \"$r16 := @caughtexception\", \"virtualinvoke r28.<javax.net.ssl.SSLSocket: void close()>()\", \"goto [?= throw $r16]\", \"$r24 := @caughtexception\", \"throw $r16\", \"return r28\"],\"isSecure.2\":[\"if r1 != null goto $z0 = r1 instanceof javax.net.ssl.SSLSocket\", \"$r4 = new java.lang.IllegalArgumentException\", \"specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(\"Socket may not be null\")\", \"throw $r4\"],\"isSecure.7\":[\"if $z0 != 0 goto $z1 = virtualinvoke r1.<java.net.Socket: boolean isClosed()>()\", \"$r3 = new java.lang.IllegalArgumentException\", \"specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(\"Socket not created by this factory\")\", \"throw $r3\"],\"isSecure.12\":[\"if $z1 == 0 goto return 1\", \"$r2 = new java.lang.IllegalArgumentException\", \"specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(\"Socket is closed\")\", \"throw $r2\"],\"createLayeredSocket.5\":[\"$r5 = r0.<org.apache.http.conn.ssl.SSLSocketFactory: javax.net.ssl.SSLSocketFactory socketfactory>\", \"$r6 = virtualinvoke $r5.<javax.net.ssl.SSLSocketFactory: java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean)>(r1, r2, i0, 1)\", \"r4 = (javax.net.ssl.SSLSocket) $r6\", \"virtualinvoke r0.<org.apache.http.conn.ssl.SSLSocketFactory: void prepareSocket(javax.net.ssl.SSLSocket)>(r4)\", \"$r7 = r0.<org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.X509HostnameVerifier hostnameVerifier>\", \"if $r7 == null goto return r4\", \"$r8 = r0.<org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.X509HostnameVerifier hostnameVerifier>\", \"interfaceinvoke $r8.<org.apache.http.conn.ssl.X509HostnameVerifier: void verify(java.lang.String,javax.net.ssl.SSLSocket)>(r2, r4)\", \"return r4\"],\"createLayeredSocket.5\":[\"$r4 = r0.<org.apache.http.conn.ssl.SSLSocketFactory: javax.net.ssl.SSLSocketFactory socketfactory>\", \"$r5 = virtualinvoke $r4.<javax.net.ssl.SSLSocketFactory: java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean)>(r1, r2, i0, z0)\", \"r3 = (javax.net.ssl.SSLSocket) $r5\", \"virtualinvoke r0.<org.apache.http.conn.ssl.SSLSocketFactory: void prepareSocket(javax.net.ssl.SSLSocket)>(r3)\", \"$r6 = r0.<org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.X509HostnameVerifier hostnameVerifier>\", \"if $r6 == null goto return r3\", \"$r7 = r0.<org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.X509HostnameVerifier hostnameVerifier>\", \"interfaceinvoke $r7.<org.apache.http.conn.ssl.X509HostnameVerifier: void verify(java.lang.String,javax.net.ssl.SSLSocket)>(r2, r3)\", \"return r3\"],\"setHostnameVerifier.2\":[\"if r1 != null goto r0.<org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.X509HostnameVerifier hostnameVerifier> = r1\", \"$r2 = new java.lang.IllegalArgumentException\", \"specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(\"Hostname verifier may not be null\")\", \"throw $r2\"],\"connectSocket.7\":null,\"connectSocket.8\":[\"if r3 != null goto (branch)\", \"if i1 <= 0 goto $r12 = r0.<org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.scheme.HostNameResolver nameResolver>\", \"if i1 >= 0 goto $r6 = new java.net.InetSocketAddress\", \"i1 = 0\", \"$r6 = new java.net.InetSocketAddress\", \"specialinvoke $r6.<java.net.InetSocketAddress: void <init>(java.net.InetAddress,int)>(r3, i1)\", \"r11 = $r6\", \"$r12 = r0.<org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.scheme.HostNameResolver nameResolver>\", \"if $r12 == null goto r13 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>(r2)\", \"$r10 = r0.<org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.scheme.HostNameResolver nameResolver>\", \"r13 = interfaceinvoke $r10.<org.apache.http.conn.scheme.HostNameResolver: java.net.InetAddress resolve(java.lang.String)>(r2)\", \"goto [?= $r7 = new org.apache.http.conn.HttpInetSocketAddress]\", \"r13 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>(r2)\", \"$r7 = new org.apache.http.conn.HttpInetSocketAddress\", \"$r8 = new org.apache.http.HttpHost\", \"specialinvoke $r8.<org.apache.http.HttpHost: void <init>(java.lang.String,int)>(r2, i0)\", \"specialinvoke $r7.<org.apache.http.conn.HttpInetSocketAddress: void <init>(org.apache.http.HttpHost,java.net.InetAddress,int)>($r8, r13, i0)\", \"$r9 = virtualinvoke r0.<org.apache.http.conn.ssl.SSLSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>(r1, $r7, r11, r4)\", \"return $r9\"],\"<clinit>.9\":[\"$r3 = \"\"\", \"$r4 = virtualinvoke $r3.<java.lang.String: char[] toCharArray()>()\", \"<org.apache.http.conn.ssl.SSLSocketFactory: char[] EMPTY_PASSWORD> = $r4\"],\"split\":null,\"<init>\":null,\"<init>\":null,\"internalPrepareSocket\":null,\"createSocket\":null,\"connectSocket\":null,\"createLayeredSocket\":null,\"verifyHostname\":null},\"rhs\" : {\"modifier\":131073,\"interfaces\":[\"LayeredConnectionSocketFactory\", \"SchemeLayeredSocketFactory\", \"LayeredSchemeSocketFactory\", \"LayeredSocketFactory\"],\"EMPTY_PASSWORD\":null,\"supportedProtocols\":\"<org.apache.http.conn.ssl.SSLSocketFactory: java.lang.String[] supportedProtocols>\",\"supportedCipherSuites\":\"<org.apache.http.conn.ssl.SSLSocketFactory: java.lang.String[] supportedCipherSuites>\",\"getSocketFactory.1\":[\"$r1 = staticinvoke <org.apache.http.conn.ssl.SSLContexts: javax.net.ssl.SSLContext createDefault()>()\", \"$r2 = <org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.X509HostnameVerifier BROWSER_COMPATIBLE_HOSTNAME_VERIFIER>\", \"specialinvoke $r0.<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(javax.net.ssl.SSLContext,org.apache.http.conn.ssl.X509HostnameVerifier)>($r1, $r2)\"],\"getSystemSocketFactory.1\":[\"$r1 = staticinvoke <javax.net.ssl.SSLSocketFactory: javax.net.SocketFactory getDefault()>()\", \"$r2 = (javax.net.ssl.SSLSocketFactory) $r1\", \"$r3 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(\"https.protocols\")\", \"$r4 = staticinvoke <org.apache.http.conn.ssl.SSLSocketFactory: java.lang.String[] split(java.lang.String)>($r3)\", \"$r5 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(\"https.cipherSuites\")\", \"$r6 = staticinvoke <org.apache.http.conn.ssl.SSLSocketFactory: java.lang.String[] split(java.lang.String)>($r5)\", \"$r7 = <org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.X509HostnameVerifier BROWSER_COMPATIBLE_HOSTNAME_VERIFIER>\", \"specialinvoke $r0.<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(javax.net.ssl.SSLSocketFactory,java.lang.String[],java.lang.String[],org.apache.http.conn.ssl.X509HostnameVerifier)>($r2, $r4, $r6, $r7)\"],\"createSSLContext\":null,\"createSystemSSLContext\":null,\"createDefaultSSLContext\":null,\"createSystemSSLContext\":null,\"<init>.7\":[\"$r7 = staticinvoke <org.apache.http.conn.ssl.SSLContexts: org.apache.http.conn.ssl.SSLContextBuilder custom()>()\", \"$r8 = virtualinvoke $r7.<org.apache.http.conn.ssl.SSLContextBuilder: org.apache.http.conn.ssl.SSLContextBuilder useProtocol(java.lang.String)>(r1)\", \"$r9 = virtualinvoke $r8.<org.apache.http.conn.ssl.SSLContextBuilder: org.apache.http.conn.ssl.SSLContextBuilder setSecureRandom(java.security.SecureRandom)>(r5)\", \"if r3 == null goto $r15 = null\", \"$r15 = virtualinvoke r3.<java.lang.String: char[] toCharArray()>()\", \"goto [?= $r10 = virtualinvoke $r9.<org.apache.http.conn.ssl.SSLContextBuilder: org.apache.http.conn.ssl.SSLContextBuilder loadKeyMaterial(java.security.KeyStore,char[])>(r2, $r15)]\", \"$r15 = null\", \"$r10 = virtualinvoke $r9.<org.apache.http.conn.ssl.SSLContextBuilder: org.apache.http.conn.ssl.SSLContextBuilder loadKeyMaterial(java.security.KeyStore,char[])>(r2, $r15)\", \"$r11 = virtualinvoke $r10.<org.apache.http.conn.ssl.SSLContextBuilder: org.apache.http.conn.ssl.SSLContextBuilder loadTrustMaterial(java.security.KeyStore)>(r4)\", \"$r12 = virtualinvoke $r11.<org.apache.http.conn.ssl.SSLContextBuilder: javax.net.ssl.SSLContext build()>()\", \"specialinvoke r0.<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(javax.net.ssl.SSLContext,org.apache.http.conn.scheme.HostNameResolver)>($r12, r6)\"],\"<init>.7\":[\"$r7 = staticinvoke <org.apache.http.conn.ssl.SSLContexts: org.apache.http.conn.ssl.SSLContextBuilder custom()>()\", \"$r8 = virtualinvoke $r7.<org.apache.http.conn.ssl.SSLContextBuilder: org.apache.http.conn.ssl.SSLContextBuilder useProtocol(java.lang.String)>(r1)\", \"$r9 = virtualinvoke $r8.<org.apache.http.conn.ssl.SSLContextBuilder: org.apache.http.conn.ssl.SSLContextBuilder setSecureRandom(java.security.SecureRandom)>(r5)\", \"if r3 == null goto $r15 = null\", \"$r15 = virtualinvoke r3.<java.lang.String: char[] toCharArray()>()\", \"goto [?= $r10 = virtualinvoke $r9.<org.apache.http.conn.ssl.SSLContextBuilder: org.apache.http.conn.ssl.SSLContextBuilder loadKeyMaterial(java.security.KeyStore,char[])>(r2, $r15)]\", \"$r15 = null\", \"$r10 = virtualinvoke $r9.<org.apache.http.conn.ssl.SSLContextBuilder: org.apache.http.conn.ssl.SSLContextBuilder loadKeyMaterial(java.security.KeyStore,char[])>(r2, $r15)\", \"$r11 = virtualinvoke $r10.<org.apache.http.conn.ssl.SSLContextBuilder: org.apache.http.conn.ssl.SSLContextBuilder loadTrustMaterial(java.security.KeyStore)>(r4)\", \"$r12 = virtualinvoke $r11.<org.apache.http.conn.ssl.SSLContextBuilder: javax.net.ssl.SSLContext build()>()\", \"specialinvoke r0.<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(javax.net.ssl.SSLContext,org.apache.http.conn.ssl.X509HostnameVerifier)>($r12, r6)\"],\"<init>.8\":[\"$r8 = staticinvoke <org.apache.http.conn.ssl.SSLContexts: org.apache.http.conn.ssl.SSLContextBuilder custom()>()\", \"$r9 = virtualinvoke $r8.<org.apache.http.conn.ssl.SSLContextBuilder: org.apache.http.conn.ssl.SSLContextBuilder useProtocol(java.lang.String)>(r1)\", \"$r10 = virtualinvoke $r9.<org.apache.http.conn.ssl.SSLContextBuilder: org.apache.http.conn.ssl.SSLContextBuilder setSecureRandom(java.security.SecureRandom)>(r5)\", \"if r3 == null goto $r16 = null\", \"$r16 = virtualinvoke r3.<java.lang.String: char[] toCharArray()>()\", \"goto [?= $r11 = virtualinvoke $r10.<org.apache.http.conn.ssl.SSLContextBuilder: org.apache.http.conn.ssl.SSLContextBuilder loadKeyMaterial(java.security.KeyStore,char[])>(r2, $r16)]\", \"$r16 = null\", \"$r11 = virtualinvoke $r10.<org.apache.http.conn.ssl.SSLContextBuilder: org.apache.http.conn.ssl.SSLContextBuilder loadKeyMaterial(java.security.KeyStore,char[])>(r2, $r16)\", \"$r12 = virtualinvoke $r11.<org.apache.http.conn.ssl.SSLContextBuilder: org.apache.http.conn.ssl.SSLContextBuilder loadTrustMaterial(java.security.KeyStore,org.apache.http.conn.ssl.TrustStrategy)>(r4, r6)\", \"$r13 = virtualinvoke $r12.<org.apache.http.conn.ssl.SSLContextBuilder: javax.net.ssl.SSLContext build()>()\", \"specialinvoke r0.<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(javax.net.ssl.SSLContext,org.apache.http.conn.ssl.X509HostnameVerifier)>($r13, r7)\"],\"<init>.4\":[\"$r4 = staticinvoke <org.apache.http.conn.ssl.SSLContexts: org.apache.http.conn.ssl.SSLContextBuilder custom()>()\", \"if r2 == null goto $r11 = null\", \"$r11 = virtualinvoke r2.<java.lang.String: char[] toCharArray()>()\", \"goto [?= $r5 = virtualinvoke $r4.<org.apache.http.conn.ssl.SSLContextBuilder: org.apache.http.conn.ssl.SSLContextBuilder loadKeyMaterial(java.security.KeyStore,char[])>(r1, $r11)]\", \"$r11 = null\", \"$r5 = virtualinvoke $r4.<org.apache.http.conn.ssl.SSLContextBuilder: org.apache.http.conn.ssl.SSLContextBuilder loadKeyMaterial(java.security.KeyStore,char[])>(r1, $r11)\", \"$r6 = virtualinvoke $r5.<org.apache.http.conn.ssl.SSLContextBuilder: org.apache.http.conn.ssl.SSLContextBuilder loadTrustMaterial(java.security.KeyStore)>(r3)\", \"$r7 = virtualinvoke $r6.<org.apache.http.conn.ssl.SSLContextBuilder: javax.net.ssl.SSLContext build()>()\", \"$r8 = <org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.X509HostnameVerifier BROWSER_COMPATIBLE_HOSTNAME_VERIFIER>\", \"specialinvoke r0.<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(javax.net.ssl.SSLContext,org.apache.http.conn.ssl.X509HostnameVerifier)>($r7, $r8)\"],\"<init>.3\":[\"$r3 = staticinvoke <org.apache.http.conn.ssl.SSLContexts: org.apache.http.conn.ssl.SSLContextBuilder custom()>()\", \"if r2 == null goto $r9 = null\", \"$r9 = virtualinvoke r2.<java.lang.String: char[] toCharArray()>()\", \"goto [?= $r4 = virtualinvoke $r3.<org.apache.http.conn.ssl.SSLContextBuilder: org.apache.http.conn.ssl.SSLContextBuilder loadKeyMaterial(java.security.KeyStore,char[])>(r1, $r9)]\", \"$r9 = null\", \"$r4 = virtualinvoke $r3.<org.apache.http.conn.ssl.SSLContextBuilder: org.apache.http.conn.ssl.SSLContextBuilder loadKeyMaterial(java.security.KeyStore,char[])>(r1, $r9)\", \"$r5 = virtualinvoke $r4.<org.apache.http.conn.ssl.SSLContextBuilder: javax.net.ssl.SSLContext build()>()\", \"$r6 = <org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.X509HostnameVerifier BROWSER_COMPATIBLE_HOSTNAME_VERIFIER>\", \"specialinvoke r0.<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(javax.net.ssl.SSLContext,org.apache.http.conn.ssl.X509HostnameVerifier)>($r5, $r6)\"],\"<init>.2\":[\"$r2 = staticinvoke <org.apache.http.conn.ssl.SSLContexts: org.apache.http.conn.ssl.SSLContextBuilder custom()>()\", \"$r3 = virtualinvoke $r2.<org.apache.http.conn.ssl.SSLContextBuilder: org.apache.http.conn.ssl.SSLContextBuilder loadTrustMaterial(java.security.KeyStore)>(r1)\", \"$r4 = virtualinvoke $r3.<org.apache.http.conn.ssl.SSLContextBuilder: javax.net.ssl.SSLContext build()>()\", \"$r5 = <org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.X509HostnameVerifier BROWSER_COMPATIBLE_HOSTNAME_VERIFIER>\", \"specialinvoke r0.<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(javax.net.ssl.SSLContext,org.apache.http.conn.ssl.X509HostnameVerifier)>($r4, $r5)\"],\"<init>.3\":[\"$r3 = staticinvoke <org.apache.http.conn.ssl.SSLContexts: org.apache.http.conn.ssl.SSLContextBuilder custom()>()\", \"$r4 = virtualinvoke $r3.<org.apache.http.conn.ssl.SSLContextBuilder: org.apache.http.conn.ssl.SSLContextBuilder loadTrustMaterial(java.security.KeyStore,org.apache.http.conn.ssl.TrustStrategy)>(null, r1)\", \"$r5 = virtualinvoke $r4.<org.apache.http.conn.ssl.SSLContextBuilder: javax.net.ssl.SSLContext build()>()\", \"specialinvoke r0.<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(javax.net.ssl.SSLContext,org.apache.http.conn.ssl.X509HostnameVerifier)>($r5, r2)\"],\"<init>.2\":[\"$r2 = staticinvoke <org.apache.http.conn.ssl.SSLContexts: org.apache.http.conn.ssl.SSLContextBuilder custom()>()\", \"$r3 = virtualinvoke $r2.<org.apache.http.conn.ssl.SSLContextBuilder: org.apache.http.conn.ssl.SSLContextBuilder loadTrustMaterial(java.security.KeyStore,org.apache.http.conn.ssl.TrustStrategy)>(null, r1)\", \"$r4 = virtualinvoke $r3.<org.apache.http.conn.ssl.SSLContextBuilder: javax.net.ssl.SSLContext build()>()\", \"$r5 = <org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.X509HostnameVerifier BROWSER_COMPATIBLE_HOSTNAME_VERIFIER>\", \"specialinvoke r0.<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(javax.net.ssl.SSLContext,org.apache.http.conn.ssl.X509HostnameVerifier)>($r4, $r5)\"],\"<init>.9\":[\"r0.<org.apache.http.conn.ssl.SSLSocketFactory: java.lang.String[] supportedProtocols> = null\", \"r0.<org.apache.http.conn.ssl.SSLSocketFactory: java.lang.String[] supportedCipherSuites> = null\"],\"<init>.3\":[\"$r3 = staticinvoke <org.apache.http.util.Args: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, \"SSL context\")\", \"$r4 = (javax.net.ssl.SSLContext) $r3\", \"$r5 = virtualinvoke $r4.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>()\", \"specialinvoke r0.<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(javax.net.ssl.SSLSocketFactory,java.lang.String[],java.lang.String[],org.apache.http.conn.ssl.X509HostnameVerifier)>($r5, null, null, r2)\"],\"<init>.3\":[\"specialinvoke r0.<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(javax.net.ssl.SSLSocketFactory,java.lang.String[],java.lang.String[],org.apache.http.conn.ssl.X509HostnameVerifier)>(r1, null, null, r2)\"],\"createSocket.2\":[\"$r2 = (org.apache.http.protocol.HttpContext) null\", \"$r3 = virtualinvoke r0.<org.apache.http.conn.ssl.SSLSocketFactory: java.net.Socket createSocket(org.apache.http.protocol.HttpContext)>($r2)\", \"return $r3\"],\"createSocket.1\":[\"$r1 = (org.apache.http.protocol.HttpContext) null\", \"$r2 = virtualinvoke r0.<org.apache.http.conn.ssl.SSLSocketFactory: java.net.Socket createSocket(org.apache.http.protocol.HttpContext)>($r1)\", \"return $r2\"],\"connectSocket.5\":[\"staticinvoke <org.apache.http.util.Args: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, \"Remote address\")\", \"staticinvoke <org.apache.http.util.Args: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r4, \"HTTP parameters\")\"],\"connectSocket.39\":[\"if $z0 == 0 goto $r7 = new org.apache.http.HttpHost\", \"$r10 = (org.apache.http.conn.HttpInetSocketAddress) r2\", \"r11 = virtualinvoke $r10.<org.apache.http.conn.HttpInetSocketAddress: org.apache.http.HttpHost getHttpHost()>()\", \"goto [?= i0 = staticinvoke <org.apache.http.params.HttpConnectionParams: int getSoTimeout(org.apache.http.params.HttpParams)>(r4)]\", \"$r7 = new org.apache.http.HttpHost\", \"$r8 = virtualinvoke r2.<java.net.InetSocketAddress: java.lang.String getHostName()>()\", \"$i2 = virtualinvoke r2.<java.net.InetSocketAddress: int getPort()>()\", \"specialinvoke $r7.<org.apache.http.HttpHost: void <init>(java.lang.String,int,java.lang.String)>($r8, $i2, \"https\")\", \"r11 = $r7\", \"i0 = staticinvoke <org.apache.http.params.HttpConnectionParams: int getSoTimeout(org.apache.http.params.HttpParams)>(r4)\", \"i1 = staticinvoke <org.apache.http.params.HttpConnectionParams: int getConnectionTimeout(org.apache.http.params.HttpParams)>(r4)\", \"virtualinvoke r1.<java.net.Socket: void setSoTimeout(int)>(i0)\", \"$r9 = virtualinvoke r0.<org.apache.http.conn.ssl.SSLSocketFactory: java.net.Socket connectSocket(int,java.net.Socket,org.apache.http.HttpHost,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.protocol.HttpContext)>(i1, r1, r11, r2, r3, null)\", \"return $r9\"],\"isSecure.2\":[\"staticinvoke <org.apache.http.util.Args: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, \"Socket\")\"],\"isSecure.7\":[\"staticinvoke <org.apache.http.util.Asserts: void check(boolean,java.lang.String)>($z0, \"Socket not created by this factory\")\"],\"isSecure.12\":[\"if $z1 != 0 goto $z2 = 0\", \"$z2 = 1\", \"goto [?= staticinvoke <org.apache.http.util.Asserts: void check(boolean,java.lang.String)>($z2, \"Socket is closed\")]\", \"$z2 = 0\", \"staticinvoke <org.apache.http.util.Asserts: void check(boolean,java.lang.String)>($z2, \"Socket is closed\")\"],\"createLayeredSocket.5\":[\"$r4 = (org.apache.http.protocol.HttpContext) null\", \"$r5 = virtualinvoke r0.<org.apache.http.conn.ssl.SSLSocketFactory: java.net.Socket createLayeredSocket(java.net.Socket,java.lang.String,int,org.apache.http.protocol.HttpContext)>(r1, r2, i0, $r4)\", \"return $r5\"],\"createLayeredSocket.5\":[\"$r3 = (org.apache.http.protocol.HttpContext) null\", \"$r4 = virtualinvoke r0.<org.apache.http.conn.ssl.SSLSocketFactory: java.net.Socket createLayeredSocket(java.net.Socket,java.lang.String,int,org.apache.http.protocol.HttpContext)>(r1, r2, i0, $r3)\", \"return $r4\"],\"setHostnameVerifier.2\":[\"staticinvoke <org.apache.http.util.Args: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r1, \"Hostname verifier\")\"],\"connectSocket.7\":[\"$r6 = r0.<org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.scheme.HostNameResolver nameResolver>\", \"if $r6 == null goto r10 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>(r2)\", \"$r9 = r0.<org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.scheme.HostNameResolver nameResolver>\", \"r10 = interfaceinvoke $r9.<org.apache.http.conn.scheme.HostNameResolver: java.net.InetAddress resolve(java.lang.String)>(r2)\", \"goto [?= r11 = null]\", \"r10 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>(r2)\"],\"connectSocket.8\":[\"if r3 != null goto r15 = new java.net.InetSocketAddress\", \"if i1 <= 0 goto r17 = new org.apache.http.conn.HttpInetSocketAddress\", \"r15 = new java.net.InetSocketAddress\", \"if i1 <= 0 goto $i2 = 0\", \"$i2 = i1\", \"goto [?= specialinvoke r15.<java.net.InetSocketAddress: void <init>(java.net.InetAddress,int)>(r3, $i2)]\", \"$i2 = 0\", \"specialinvoke r15.<java.net.InetSocketAddress: void <init>(java.net.InetAddress,int)>(r3, $i2)\", \"r11 = r15\", \"r17 = new org.apache.http.conn.HttpInetSocketAddress\", \"r16 = new org.apache.http.HttpHost\", \"specialinvoke r16.<org.apache.http.HttpHost: void <init>(java.lang.String,int)>(r2, i0)\", \"specialinvoke r17.<org.apache.http.conn.HttpInetSocketAddress: void <init>(org.apache.http.HttpHost,java.net.InetAddress,int)>(r16, r10, i0)\", \"r18 = (java.net.InetSocketAddress) r17\", \"$r14 = virtualinvoke r0.<org.apache.http.conn.ssl.SSLSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams)>(r1, r18, r11, r4)\", \"return $r14\"],\"<clinit>.9\":null,\"split\":\"<org.apache.http.conn.ssl.SSLSocketFactory: java.lang.String[] split(java.lang.String)>\",\"<init>\":\"<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(javax.net.ssl.SSLContext,java.lang.String[],java.lang.String[],org.apache.http.conn.ssl.X509HostnameVerifier)>\",\"<init>\":\"<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(javax.net.ssl.SSLSocketFactory,java.lang.String[],java.lang.String[],org.apache.http.conn.ssl.X509HostnameVerifier)>\",\"internalPrepareSocket\":\"<org.apache.http.conn.ssl.SSLSocketFactory: void internalPrepareSocket(javax.net.ssl.SSLSocket)>\",\"createSocket\":\"<org.apache.http.conn.ssl.SSLSocketFactory: java.net.Socket createSocket(org.apache.http.protocol.HttpContext)>\",\"connectSocket\":\"<org.apache.http.conn.ssl.SSLSocketFactory: java.net.Socket connectSocket(int,java.net.Socket,org.apache.http.HttpHost,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.protocol.HttpContext)>\",\"createLayeredSocket\":\"<org.apache.http.conn.ssl.SSLSocketFactory: java.net.Socket createLayeredSocket(java.net.Socket,java.lang.String,int,org.apache.http.protocol.HttpContext)>\",\"verifyHostname\":\"<org.apache.http.conn.ssl.SSLSocketFactory: void verifyHostname(javax.net.ssl.SSLSocket,java.lang.String)>\"}}"
        },
        {
            "contained": true,
            "commit": "1576361",
            "qname": "org.apache.http.conn.ssl.SSLSocketFactory.connectSocket(Socket,InetSocketAddress,InetSocketAddress,HttpParams)",
            "affectedFile": "-deprecated/org/apache/http/conn/ssl/SSLSocketFactory.class",
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/1576361/org/apache/http/conn/ssl/SSLSocketFactory.class",
            "diff": "{\"lhs\" : {\"5\":[\"if r2 != null goto (branch)\", \"$r15 = new java.lang.IllegalArgumentException\", \"specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(\"Remote address may not be null\")\", \"throw $r15\", \"if r4 != null goto (branch)\", \"$r14 = new java.lang.IllegalArgumentException\", \"specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(\"HTTP parameters may not be null\")\", \"throw $r14\", \"if r1 == null goto $r7 = r0.<org.apache.http.conn.ssl.SSLSocketFactory: javax.net.ssl.SSLSocketFactory socketfactory>\", \"$r25 = r1\", \"goto [?= r5 = $r25]\", \"$r7 = r0.<org.apache.http.conn.ssl.SSLSocketFactory: javax.net.ssl.SSLSocketFactory socketfactory>\", \"$r25 = virtualinvoke $r7.<javax.net.ssl.SSLSocketFactory: java.net.Socket createSocket()>()\", \"r5 = $r25\", \"if r3 == null goto i0 = staticinvoke <org.apache.http.params.HttpConnectionParams: int getConnectionTimeout(org.apache.http.params.HttpParams)>(r4)\", \"$z2 = staticinvoke <org.apache.http.params.HttpConnectionParams: boolean getSoReuseaddr(org.apache.http.params.HttpParams)>(r4)\", \"virtualinvoke $r25.<java.net.Socket: void setReuseAddress(boolean)>($z2)\", \"virtualinvoke $r25.<java.net.Socket: void bind(java.net.SocketAddress)>(r3)\", \"i0 = staticinvoke <org.apache.http.params.HttpConnectionParams: int getConnectionTimeout(org.apache.http.params.HttpParams)>(r4)\", \"i1 = staticinvoke <org.apache.http.params.HttpConnectionParams: int getSoTimeout(org.apache.http.params.HttpParams)>(r4)\", \"virtualinvoke r5.<java.net.Socket: void setSoTimeout(int)>(i1)\", \"virtualinvoke r5.<java.net.Socket: void connect(java.net.SocketAddress,int)>(r2, i0)\", \"goto [?= $z0 = r2 instanceof org.apache.http.conn.HttpInetSocketAddress]\", \"$r17 := @caughtexception\", \"$r18 = new org.apache.http.conn.ConnectTimeoutException\", \"$r19 = new java.lang.StringBuilder\", \"specialinvoke $r19.<java.lang.StringBuilder: void <init>()>()\", \"$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Connect to \")\", \"$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2)\", \"$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" timed out\")\", \"$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>()\", \"specialinvoke $r18.<org.apache.http.conn.ConnectTimeoutException: void <init>(java.lang.String)>($r23)\", \"throw $r18\"],\"39\":[\"if $z0 == 0 goto r27 = virtualinvoke r2.<java.net.InetSocketAddress: java.lang.String getHostName()>()\", \"$r12 = (org.apache.http.conn.HttpInetSocketAddress) r2\", \"$r13 = virtualinvoke $r12.<org.apache.http.conn.HttpInetSocketAddress: org.apache.http.HttpHost getHttpHost()>()\", \"r27 = virtualinvoke $r13.<org.apache.http.HttpHost: java.lang.String getHostName()>()\", \"goto [?= $z1 = r5 instanceof javax.net.ssl.SSLSocket]\", \"r27 = virtualinvoke r2.<java.net.InetSocketAddress: java.lang.String getHostName()>()\", \"$z1 = r5 instanceof javax.net.ssl.SSLSocket\", \"if $z1 == 0 goto i2 = virtualinvoke r2.<java.net.InetSocketAddress: int getPort()>()\", \"r28 = (javax.net.ssl.SSLSocket) r5\", \"goto [?= $r10 = r0.<org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.X509HostnameVerifier hostnameVerifier>]\", \"i2 = virtualinvoke r2.<java.net.InetSocketAddress: int getPort()>()\", \"$r8 = r0.<org.apache.http.conn.ssl.SSLSocketFactory: javax.net.ssl.SSLSocketFactory socketfactory>\", \"$r9 = virtualinvoke $r8.<javax.net.ssl.SSLSocketFactory: java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean)>(r5, r27, i2, 1)\", \"r28 = (javax.net.ssl.SSLSocket) $r9\", \"virtualinvoke r0.<org.apache.http.conn.ssl.SSLSocketFactory: void prepareSocket(javax.net.ssl.SSLSocket)>(r28)\", \"$r10 = r0.<org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.X509HostnameVerifier hostnameVerifier>\", \"if $r10 == null goto return r28\", \"$r11 = r0.<org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.X509HostnameVerifier hostnameVerifier>\", \"interfaceinvoke $r11.<org.apache.http.conn.ssl.X509HostnameVerifier: void verify(java.lang.String,javax.net.ssl.SSLSocket)>(r27, r28)\", \"goto [?= return r28]\", \"$r16 := @caughtexception\", \"virtualinvoke r28.<javax.net.ssl.SSLSocket: void close()>()\", \"goto [?= throw $r16]\", \"$r24 := @caughtexception\", \"throw $r16\", \"return r28\"]},\"rhs\" : {\"5\":[\"staticinvoke <org.apache.http.util.Args: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, \"Remote address\")\", \"staticinvoke <org.apache.http.util.Args: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r4, \"HTTP parameters\")\"],\"39\":[\"if $z0 == 0 goto $r7 = new org.apache.http.HttpHost\", \"$r10 = (org.apache.http.conn.HttpInetSocketAddress) r2\", \"r11 = virtualinvoke $r10.<org.apache.http.conn.HttpInetSocketAddress: org.apache.http.HttpHost getHttpHost()>()\", \"goto [?= i0 = staticinvoke <org.apache.http.params.HttpConnectionParams: int getSoTimeout(org.apache.http.params.HttpParams)>(r4)]\", \"$r7 = new org.apache.http.HttpHost\", \"$r8 = virtualinvoke r2.<java.net.InetSocketAddress: java.lang.String getHostName()>()\", \"$i2 = virtualinvoke r2.<java.net.InetSocketAddress: int getPort()>()\", \"specialinvoke $r7.<org.apache.http.HttpHost: void <init>(java.lang.String,int,java.lang.String)>($r8, $i2, \"https\")\", \"r11 = $r7\", \"i0 = staticinvoke <org.apache.http.params.HttpConnectionParams: int getSoTimeout(org.apache.http.params.HttpParams)>(r4)\", \"i1 = staticinvoke <org.apache.http.params.HttpConnectionParams: int getConnectionTimeout(org.apache.http.params.HttpParams)>(r4)\", \"virtualinvoke r1.<java.net.Socket: void setSoTimeout(int)>(i0)\", \"$r9 = virtualinvoke r0.<org.apache.http.conn.ssl.SSLSocketFactory: java.net.Socket connectSocket(int,java.net.Socket,org.apache.http.HttpHost,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.protocol.HttpContext)>(i1, r1, r11, r2, r3, null)\", \"return $r9\"]}}"
        },
        {
            "contained": true,
            "commit": "1576362",
            "qname": "org.apache.http.conn.ssl.SSLSocketFactory.connectSocket(Socket,InetSocketAddress,InetSocketAddress,HttpParams)",
            "affectedFile": "-deprecated/org/apache/http/conn/ssl/SSLSocketFactory.class",
            "ref_file": "/media/adann/9117b29d-a7c2-4f28-8956-e1540fc0a715/test_compare_script/1576362/org/apache/http/conn/ssl/SSLSocketFactory.class",
            "diff": "{\"lhs\" : {\"5\":[\"if r2 != null goto (branch)\", \"$r15 = new java.lang.IllegalArgumentException\", \"specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(\"Remote address may not be null\")\", \"throw $r15\", \"if r4 != null goto (branch)\", \"$r14 = new java.lang.IllegalArgumentException\", \"specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(\"HTTP parameters may not be null\")\", \"throw $r14\", \"if r1 == null goto $r7 = r0.<org.apache.http.conn.ssl.SSLSocketFactory: javax.net.ssl.SSLSocketFactory socketfactory>\", \"$r25 = r1\", \"goto [?= r5 = $r25]\", \"$r7 = r0.<org.apache.http.conn.ssl.SSLSocketFactory: javax.net.ssl.SSLSocketFactory socketfactory>\", \"$r25 = virtualinvoke $r7.<javax.net.ssl.SSLSocketFactory: java.net.Socket createSocket()>()\", \"r5 = $r25\", \"if r3 == null goto i0 = staticinvoke <org.apache.http.params.HttpConnectionParams: int getConnectionTimeout(org.apache.http.params.HttpParams)>(r4)\", \"$z2 = staticinvoke <org.apache.http.params.HttpConnectionParams: boolean getSoReuseaddr(org.apache.http.params.HttpParams)>(r4)\", \"virtualinvoke $r25.<java.net.Socket: void setReuseAddress(boolean)>($z2)\", \"virtualinvoke $r25.<java.net.Socket: void bind(java.net.SocketAddress)>(r3)\", \"i0 = staticinvoke <org.apache.http.params.HttpConnectionParams: int getConnectionTimeout(org.apache.http.params.HttpParams)>(r4)\", \"i1 = staticinvoke <org.apache.http.params.HttpConnectionParams: int getSoTimeout(org.apache.http.params.HttpParams)>(r4)\", \"virtualinvoke r5.<java.net.Socket: void setSoTimeout(int)>(i1)\", \"virtualinvoke r5.<java.net.Socket: void connect(java.net.SocketAddress,int)>(r2, i0)\", \"goto [?= $z0 = r2 instanceof org.apache.http.conn.HttpInetSocketAddress]\", \"$r17 := @caughtexception\", \"$r18 = new org.apache.http.conn.ConnectTimeoutException\", \"$r19 = new java.lang.StringBuilder\", \"specialinvoke $r19.<java.lang.StringBuilder: void <init>()>()\", \"$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Connect to \")\", \"$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2)\", \"$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" timed out\")\", \"$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>()\", \"specialinvoke $r18.<org.apache.http.conn.ConnectTimeoutException: void <init>(java.lang.String)>($r23)\", \"throw $r18\"],\"39\":[\"if $z0 == 0 goto r27 = virtualinvoke r2.<java.net.InetSocketAddress: java.lang.String getHostName()>()\", \"$r12 = (org.apache.http.conn.HttpInetSocketAddress) r2\", \"$r13 = virtualinvoke $r12.<org.apache.http.conn.HttpInetSocketAddress: org.apache.http.HttpHost getHttpHost()>()\", \"r27 = virtualinvoke $r13.<org.apache.http.HttpHost: java.lang.String getHostName()>()\", \"goto [?= $z1 = r5 instanceof javax.net.ssl.SSLSocket]\", \"r27 = virtualinvoke r2.<java.net.InetSocketAddress: java.lang.String getHostName()>()\", \"$z1 = r5 instanceof javax.net.ssl.SSLSocket\", \"if $z1 == 0 goto i2 = virtualinvoke r2.<java.net.InetSocketAddress: int getPort()>()\", \"r28 = (javax.net.ssl.SSLSocket) r5\", \"goto [?= $r10 = r0.<org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.X509HostnameVerifier hostnameVerifier>]\", \"i2 = virtualinvoke r2.<java.net.InetSocketAddress: int getPort()>()\", \"$r8 = r0.<org.apache.http.conn.ssl.SSLSocketFactory: javax.net.ssl.SSLSocketFactory socketfactory>\", \"$r9 = virtualinvoke $r8.<javax.net.ssl.SSLSocketFactory: java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean)>(r5, r27, i2, 1)\", \"r28 = (javax.net.ssl.SSLSocket) $r9\", \"virtualinvoke r0.<org.apache.http.conn.ssl.SSLSocketFactory: void prepareSocket(javax.net.ssl.SSLSocket)>(r28)\", \"$r10 = r0.<org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.X509HostnameVerifier hostnameVerifier>\", \"if $r10 == null goto return r28\", \"$r11 = r0.<org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.X509HostnameVerifier hostnameVerifier>\", \"interfaceinvoke $r11.<org.apache.http.conn.ssl.X509HostnameVerifier: void verify(java.lang.String,javax.net.ssl.SSLSocket)>(r27, r28)\", \"goto [?= return r28]\", \"$r16 := @caughtexception\", \"virtualinvoke r28.<javax.net.ssl.SSLSocket: void close()>()\", \"goto [?= throw $r16]\", \"$r24 := @caughtexception\", \"throw $r16\", \"return r28\"]},\"rhs\" : {\"5\":[\"staticinvoke <org.apache.http.util.Args: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r2, \"Remote address\")\", \"staticinvoke <org.apache.http.util.Args: java.lang.Object notNull(java.lang.Object,java.lang.String)>(r4, \"HTTP parameters\")\"],\"39\":[\"if $z0 == 0 goto $r7 = new org.apache.http.HttpHost\", \"$r10 = (org.apache.http.conn.HttpInetSocketAddress) r2\", \"r11 = virtualinvoke $r10.<org.apache.http.conn.HttpInetSocketAddress: org.apache.http.HttpHost getHttpHost()>()\", \"goto [?= i0 = staticinvoke <org.apache.http.params.HttpConnectionParams: int getSoTimeout(org.apache.http.params.HttpParams)>(r4)]\", \"$r7 = new org.apache.http.HttpHost\", \"$r8 = virtualinvoke r2.<java.net.InetSocketAddress: java.lang.String getHostName()>()\", \"$i2 = virtualinvoke r2.<java.net.InetSocketAddress: int getPort()>()\", \"specialinvoke $r7.<org.apache.http.HttpHost: void <init>(java.lang.String,int,java.lang.String)>($r8, $i2, \"https\")\", \"r11 = $r7\", \"i0 = staticinvoke <org.apache.http.params.HttpConnectionParams: int getSoTimeout(org.apache.http.params.HttpParams)>(r4)\", \"i1 = staticinvoke <org.apache.http.params.HttpConnectionParams: int getConnectionTimeout(org.apache.http.params.HttpParams)>(r4)\", \"virtualinvoke r1.<java.net.Socket: void setSoTimeout(int)>(i0)\", \"$r9 = virtualinvoke r0.<org.apache.http.conn.ssl.SSLSocketFactory: java.net.Socket connectSocket(int,java.net.Socket,org.apache.http.HttpHost,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.protocol.HttpContext)>(i1, r1, r11, r2, r3, null)\", \"return $r9\"]}}"
        }
    ],
    "timestamp": "2023-08-25",
    "cve": "CVE-2015-5262",
    "comment": "https://nvd.nist.gov/vuln/detail/CVE-2015-5262"
}