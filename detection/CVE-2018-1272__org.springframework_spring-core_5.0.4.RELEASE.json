{
    "cve": "CVE-2018-1272",
    "comment": "{\"artifacts\": [\"spring-mvc\", \"spring-webflux\"], \"references\": [\"https://pivotal.io/security/cve-2018-1272\"]}",
    "gav": {
        "artifactId": "spring-core",
        "version": "5.0.4.RELEASE",
        "groupId": "org.springframework"
    },
    "timestamp": "2018-11-30",
    "details": [
        {
            "ref_file": "/data4/test_compare_script/ab2410c754b67902f002bfcc0c3895bd7772d39/org/springframework/util/MimeTypeUtils.class",
            "commit": "ab2410c754b67902f002bfcc0c3895bd7772d39",
            "qname": "org.springframework.util.MimeTypeUtils",
            "diff": "{\"lhs\" : {\"US_ASCII\":\"<org.springframework.util.MimeTypeUtils: java.nio.charset.Charset US_ASCII>\",\"APPLICATION_ATOM_XML\":\"<org.springframework.util.MimeTypeUtils: org.springframework.util.MimeType APPLICATION_ATOM_XML>\",\"APPLICATION_ATOM_XML_VALUE\":\"<org.springframework.util.MimeTypeUtils: java.lang.String APPLICATION_ATOM_XML_VALUE>\",\"APPLICATION_FORM_URLENCODED\":\"<org.springframework.util.MimeTypeUtils: org.springframework.util.MimeType APPLICATION_FORM_URLENCODED>\",\"APPLICATION_FORM_URLENCODED_VALUE\":\"<org.springframework.util.MimeTypeUtils: java.lang.String APPLICATION_FORM_URLENCODED_VALUE>\",\"APPLICATION_XHTML_XML\":\"<org.springframework.util.MimeTypeUtils: org.springframework.util.MimeType APPLICATION_XHTML_XML>\",\"APPLICATION_XHTML_XML_VALUE\":\"<org.springframework.util.MimeTypeUtils: java.lang.String APPLICATION_XHTML_XML_VALUE>\",\"MULTIPART_FORM_DATA\":\"<org.springframework.util.MimeTypeUtils: org.springframework.util.MimeType MULTIPART_FORM_DATA>\",\"MULTIPART_FORM_DATA_VALUE\":\"<org.springframework.util.MimeTypeUtils: java.lang.String MULTIPART_FORM_DATA_VALUE>\",\"parseMimeType.3\":[\"$r16 = new org.springframework.util.InvalidMimeTypeException\", \"specialinvoke $r16.<org.springframework.util.InvalidMimeTypeException: void <init>(java.lang.String,java.lang.String)>(r0, \"\\'mimeType\\' must not be empty\")\", \"throw $r16\"],\"parseMimeType.14\":[\"$r15 = new org.springframework.util.InvalidMimeTypeException\", \"specialinvoke $r15.<org.springframework.util.InvalidMimeTypeException: void <init>(java.lang.String,java.lang.String)>(r0, \"\\'mimeType\\' must not be empty\")\", \"throw $r15\"],\"parseMimeType.23\":[\"$r14 = new org.springframework.util.InvalidMimeTypeException\", \"specialinvoke $r14.<org.springframework.util.InvalidMimeTypeException: void <init>(java.lang.String,java.lang.String)>(r0, \"does not contain \\'/\\'\")\", \"throw $r14\"],\"parseMimeType.29\":[\"$r13 = new org.springframework.util.InvalidMimeTypeException\", \"specialinvoke $r13.<org.springframework.util.InvalidMimeTypeException: void <init>(java.lang.String,java.lang.String)>(r0, \"does not contain subtype after \\'/\\'\")\", \"throw $r13\"],\"parseMimeType.42\":[\"$r12 = new org.springframework.util.InvalidMimeTypeException\", \"specialinvoke $r12.<org.springframework.util.InvalidMimeTypeException: void <init>(java.lang.String,java.lang.String)>(r0, \"wildcard type is legal only in \\'*/*\\' (all mime types)\")\", \"throw $r12\"],\"parseMimeType.68\":[\"$r10 = new java.util.LinkedHashMap\", \"specialinvoke $r10.<java.util.LinkedHashMap: void <init>(int)>(4)\", \"r30 = $r10\"],\"parseMimeType.81\":[\"$r8 = new org.springframework.util.MimeType\", \"specialinvoke $r8.<org.springframework.util.MimeType: void <init>(java.lang.String,java.lang.String,java.util.Map)>(r1, r2, r30)\", \"return $r8\"],\"parseMimeType.85\":[\"$r18 = new org.springframework.util.InvalidMimeTypeException\", \"$r19 = new java.lang.StringBuilder\", \"specialinvoke $r19.<java.lang.StringBuilder: void <init>()>()\", \"$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"unsupported charset \\'\")\", \"$r21 = virtualinvoke $r17.<java.nio.charset.UnsupportedCharsetException: java.lang.String getCharsetName()>()\", \"$r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21)\", \"$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\'\")\", \"$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>()\", \"specialinvoke $r18.<org.springframework.util.InvalidMimeTypeException: void <init>(java.lang.String,java.lang.String)>(r0, $r24)\", \"throw $r18\", \"$r25 := @caughtexception\", \"$r26 = new org.springframework.util.InvalidMimeTypeException\", \"$r27 = virtualinvoke $r25.<java.lang.IllegalArgumentException: java.lang.String getMessage()>()\", \"specialinvoke $r26.<org.springframework.util.InvalidMimeTypeException: void <init>(java.lang.String,java.lang.String)>(r0, $r27)\", \"throw $r26\"],\"sortBySpecificity.5\":\"staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(r0, $r1)\",\"generateMultipartBoundaryString.2\":\"$r2 = <org.springframework.util.MimeTypeUtils: java.nio.charset.Charset US_ASCII>\",\"<clinit>.66\":[\"$r1 = new java.util.Random\", \"specialinvoke $r1.<java.util.Random: void <init>()>()\", \"<org.springframework.util.MimeTypeUtils: java.util.Random RND> = $r1\", \"$r2 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(\"US-ASCII\")\", \"<org.springframework.util.MimeTypeUtils: java.nio.charset.Charset US_ASCII> = $r2\", \"$r3 = new org.springframework.util.MimeType$SpecificityComparator\", \"specialinvoke $r3.<org.springframework.util.MimeType$SpecificityComparator: void <init>()>()\", \"<org.springframework.util.MimeTypeUtils: java.util.Comparator SPECIFICITY_COMPARATOR> = $r3\", \"$r4 = staticinvoke <org.springframework.util.MimeType: org.springframework.util.MimeType valueOf(java.lang.String)>(\"*/*\")\", \"<org.springframework.util.MimeTypeUtils: org.springframework.util.MimeType ALL> = $r4\", \"$r5 = staticinvoke <org.springframework.util.MimeType: org.springframework.util.MimeType valueOf(java.lang.String)>(\"application/atom+xml\")\", \"<org.springframework.util.MimeTypeUtils: org.springframework.util.MimeType APPLICATION_ATOM_XML> = $r5\", \"$r6 = staticinvoke <org.springframework.util.MimeType: org.springframework.util.MimeType valueOf(java.lang.String)>(\"application/x-www-form-urlencoded\")\", \"<org.springframework.util.MimeTypeUtils: org.springframework.util.MimeType APPLICATION_FORM_URLENCODED> = $r6\", \"$r7 = staticinvoke <org.springframework.util.MimeType: org.springframework.util.MimeType valueOf(java.lang.String)>(\"application/json\")\", \"<org.springframework.util.MimeTypeUtils: org.springframework.util.MimeType APPLICATION_JSON> = $r7\", \"$r8 = staticinvoke <org.springframework.util.MimeType: org.springframework.util.MimeType valueOf(java.lang.String)>(\"application/octet-stream\")\", \"<org.springframework.util.MimeTypeUtils: org.springframework.util.MimeType APPLICATION_OCTET_STREAM> = $r8\", \"$r9 = staticinvoke <org.springframework.util.MimeType: org.springframework.util.MimeType valueOf(java.lang.String)>(\"application/xhtml+xml\")\", \"<org.springframework.util.MimeTypeUtils: org.springframework.util.MimeType APPLICATION_XHTML_XML> = $r9\", \"$r10 = staticinvoke <org.springframework.util.MimeType: org.springframework.util.MimeType valueOf(java.lang.String)>(\"application/xml\")\", \"<org.springframework.util.MimeTypeUtils: org.springframework.util.MimeType APPLICATION_XML> = $r10\", \"$r11 = staticinvoke <org.springframework.util.MimeType: org.springframework.util.MimeType valueOf(java.lang.String)>(\"image/gif\")\", \"<org.springframework.util.MimeTypeUtils: org.springframework.util.MimeType IMAGE_GIF> = $r11\", \"$r12 = staticinvoke <org.springframework.util.MimeType: org.springframework.util.MimeType valueOf(java.lang.String)>(\"image/jpeg\")\", \"<org.springframework.util.MimeTypeUtils: org.springframework.util.MimeType IMAGE_JPEG> = $r12\", \"$r13 = staticinvoke <org.springframework.util.MimeType: org.springframework.util.MimeType valueOf(java.lang.String)>(\"image/png\")\", \"<org.springframework.util.MimeTypeUtils: org.springframework.util.MimeType IMAGE_PNG> = $r13\", \"$r14 = staticinvoke <org.springframework.util.MimeType: org.springframework.util.MimeType valueOf(java.lang.String)>(\"multipart/form-data\")\", \"<org.springframework.util.MimeTypeUtils: org.springframework.util.MimeType MULTIPART_FORM_DATA> = $r14\", \"$r15 = staticinvoke <org.springframework.util.MimeType: org.springframework.util.MimeType valueOf(java.lang.String)>(\"text/html\")\", \"<org.springframework.util.MimeTypeUtils: org.springframework.util.MimeType TEXT_HTML> = $r15\", \"$r16 = staticinvoke <org.springframework.util.MimeType: org.springframework.util.MimeType valueOf(java.lang.String)>(\"text/plain\")\", \"<org.springframework.util.MimeTypeUtils: org.springframework.util.MimeType TEXT_PLAIN> = $r16\", \"$r17 = staticinvoke <org.springframework.util.MimeType: org.springframework.util.MimeType valueOf(java.lang.String)>(\"text/xml\")\", \"<org.springframework.util.MimeTypeUtils: org.springframework.util.MimeType TEXT_XML> = $r17\"]},\"rhs\" : {\"US_ASCII\":null,\"APPLICATION_ATOM_XML\":null,\"APPLICATION_ATOM_XML_VALUE\":null,\"APPLICATION_FORM_URLENCODED\":null,\"APPLICATION_FORM_URLENCODED_VALUE\":null,\"APPLICATION_XHTML_XML\":null,\"APPLICATION_XHTML_XML_VALUE\":null,\"MULTIPART_FORM_DATA\":null,\"MULTIPART_FORM_DATA_VALUE\":null,\"parseMimeType.3\":[\"r34 = new org.springframework.util.InvalidMimeTypeException\", \"specialinvoke r34.<org.springframework.util.InvalidMimeTypeException: void <init>(java.lang.String,java.lang.String)>(r0, \"\\'mimeType\\' must not be empty\")\", \"r44 = (java.lang.Throwable) r34\", \"throw r44\"],\"parseMimeType.14\":[\"r35 = new org.springframework.util.InvalidMimeTypeException\", \"specialinvoke r35.<org.springframework.util.InvalidMimeTypeException: void <init>(java.lang.String,java.lang.String)>(r0, \"\\'mimeType\\' must not be empty\")\", \"r45 = (java.lang.Throwable) r35\", \"throw r45\"],\"parseMimeType.23\":[\"r36 = new org.springframework.util.InvalidMimeTypeException\", \"specialinvoke r36.<org.springframework.util.InvalidMimeTypeException: void <init>(java.lang.String,java.lang.String)>(r0, \"does not contain \\'/\\'\")\", \"r46 = (java.lang.Throwable) r36\", \"throw r46\"],\"parseMimeType.29\":[\"r37 = new org.springframework.util.InvalidMimeTypeException\", \"specialinvoke r37.<org.springframework.util.InvalidMimeTypeException: void <init>(java.lang.String,java.lang.String)>(r0, \"does not contain subtype after \\'/\\'\")\", \"r47 = (java.lang.Throwable) r37\", \"throw r47\"],\"parseMimeType.42\":[\"r38 = new org.springframework.util.InvalidMimeTypeException\", \"specialinvoke r38.<org.springframework.util.InvalidMimeTypeException: void <init>(java.lang.String,java.lang.String)>(r0, \"wildcard type is legal only in \\'*/*\\' (all mime types)\")\", \"r48 = (java.lang.Throwable) r38\", \"throw r48\"],\"parseMimeType.68\":[\"r39 = new java.util.LinkedHashMap\", \"specialinvoke r39.<java.util.LinkedHashMap: void <init>(int)>(4)\", \"r30 = r39\"],\"parseMimeType.81\":[\"r40 = new org.springframework.util.MimeType\", \"specialinvoke r40.<org.springframework.util.MimeType: void <init>(java.lang.String,java.lang.String,java.util.Map)>(r1, r2, r30)\", \"return r40\", \"$r20 := @caughtexception\", \"r42 = new org.springframework.util.InvalidMimeTypeException\", \"r41 = new java.lang.StringBuilder\", \"specialinvoke r41.<java.lang.StringBuilder: void <init>()>()\", \"$r23 = virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"unsupported charset \\'\")\", \"$r24 = virtualinvoke $r20.<java.nio.charset.UnsupportedCharsetException: java.lang.String getCharsetName()>()\", \"$r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24)\", \"$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\'\")\", \"$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>()\", \"specialinvoke r42.<org.springframework.util.InvalidMimeTypeException: void <init>(java.lang.String,java.lang.String)>(r0, $r27)\", \"r49 = (java.lang.Throwable) r42\", \"throw r49\"],\"parseMimeType.85\":[\"r43 = new org.springframework.util.InvalidMimeTypeException\", \"$r19 = virtualinvoke $r17.<java.lang.IllegalArgumentException: java.lang.String getMessage()>()\", \"specialinvoke r43.<org.springframework.util.InvalidMimeTypeException: void <init>(java.lang.String,java.lang.String)>(r0, $r19)\", \"r50 = (java.lang.Throwable) r43\", \"throw r50\"],\"sortBySpecificity.5\":\"interfaceinvoke r0.<java.util.List: void sort(java.util.Comparator)>($r1)\",\"generateMultipartBoundaryString.2\":\"$r2 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset US_ASCII>\",\"<clinit>.66\":[\"r13 = new java.util.Random\", \"specialinvoke r13.<java.util.Random: void <init>()>()\", \"<org.springframework.util.MimeTypeUtils: java.util.Random RND> = r13\", \"r14 = new org.springframework.util.MimeType$SpecificityComparator\", \"specialinvoke r14.<org.springframework.util.MimeType$SpecificityComparator: void <init>()>()\", \"r15 = (java.util.Comparator) r14\", \"<org.springframework.util.MimeTypeUtils: java.util.Comparator SPECIFICITY_COMPARATOR> = r15\", \"$r3 = staticinvoke <org.springframework.util.MimeType: org.springframework.util.MimeType valueOf(java.lang.String)>(\"*/*\")\", \"<org.springframework.util.MimeTypeUtils: org.springframework.util.MimeType ALL> = $r3\", \"$r4 = staticinvoke <org.springframework.util.MimeType: org.springframework.util.MimeType valueOf(java.lang.String)>(\"application/json\")\", \"<org.springframework.util.MimeTypeUtils: org.springframework.util.MimeType APPLICATION_JSON> = $r4\", \"$r5 = staticinvoke <org.springframework.util.MimeType: org.springframework.util.MimeType valueOf(java.lang.String)>(\"application/octet-stream\")\", \"<org.springframework.util.MimeTypeUtils: org.springframework.util.MimeType APPLICATION_OCTET_STREAM> = $r5\", \"$r6 = staticinvoke <org.springframework.util.MimeType: org.springframework.util.MimeType valueOf(java.lang.String)>(\"application/xml\")\", \"<org.springframework.util.MimeTypeUtils: org.springframework.util.MimeType APPLICATION_XML> = $r6\", \"$r7 = staticinvoke <org.springframework.util.MimeType: org.springframework.util.MimeType valueOf(java.lang.String)>(\"image/gif\")\", \"<org.springframework.util.MimeTypeUtils: org.springframework.util.MimeType IMAGE_GIF> = $r7\", \"$r8 = staticinvoke <org.springframework.util.MimeType: org.springframework.util.MimeType valueOf(java.lang.String)>(\"image/jpeg\")\", \"<org.springframework.util.MimeTypeUtils: org.springframework.util.MimeType IMAGE_JPEG> = $r8\", \"$r9 = staticinvoke <org.springframework.util.MimeType: org.springframework.util.MimeType valueOf(java.lang.String)>(\"image/png\")\", \"<org.springframework.util.MimeTypeUtils: org.springframework.util.MimeType IMAGE_PNG> = $r9\", \"$r10 = staticinvoke <org.springframework.util.MimeType: org.springframework.util.MimeType valueOf(java.lang.String)>(\"text/html\")\", \"<org.springframework.util.MimeTypeUtils: org.springframework.util.MimeType TEXT_HTML> = $r10\", \"$r11 = staticinvoke <org.springframework.util.MimeType: org.springframework.util.MimeType valueOf(java.lang.String)>(\"text/plain\")\", \"<org.springframework.util.MimeTypeUtils: org.springframework.util.MimeType TEXT_PLAIN> = $r11\", \"$r12 = staticinvoke <org.springframework.util.MimeType: org.springframework.util.MimeType valueOf(java.lang.String)>(\"text/xml\")\", \"<org.springframework.util.MimeTypeUtils: org.springframework.util.MimeType TEXT_XML> = $r12\"]}}",
            "affectedFile": "/org/springframework/util/MimeTypeUtils.class",
            "contained": true
        },
        {
            "ref_file": "/data4/test_compare_script/e02ff3a0da50744b0980d5d665fd242eedea767/org/springframework/util/MimeTypeUtils.class",
            "commit": "e02ff3a0da50744b0980d5d665fd242eedea767",
            "qname": "org.springframework.util.MimeTypeUtils",
            "diff": "{\"lhs\" : {\"parseMimeType.3\":[\"$r16 = new org.springframework.util.InvalidMimeTypeException\", \"specialinvoke $r16.<org.springframework.util.InvalidMimeTypeException: void <init>(java.lang.String,java.lang.String)>(r0, \"\\'mimeType\\' must not be empty\")\", \"throw $r16\"],\"parseMimeType.14\":[\"$r15 = new org.springframework.util.InvalidMimeTypeException\", \"specialinvoke $r15.<org.springframework.util.InvalidMimeTypeException: void <init>(java.lang.String,java.lang.String)>(r0, \"\\'mimeType\\' must not be empty\")\", \"throw $r15\"],\"parseMimeType.23\":[\"$r14 = new org.springframework.util.InvalidMimeTypeException\", \"specialinvoke $r14.<org.springframework.util.InvalidMimeTypeException: void <init>(java.lang.String,java.lang.String)>(r0, \"does not contain \\'/\\'\")\", \"throw $r14\"],\"parseMimeType.29\":[\"$r13 = new org.springframework.util.InvalidMimeTypeException\", \"specialinvoke $r13.<org.springframework.util.InvalidMimeTypeException: void <init>(java.lang.String,java.lang.String)>(r0, \"does not contain subtype after \\'/\\'\")\", \"throw $r13\"],\"parseMimeType.42\":[\"$r12 = new org.springframework.util.InvalidMimeTypeException\", \"specialinvoke $r12.<org.springframework.util.InvalidMimeTypeException: void <init>(java.lang.String,java.lang.String)>(r0, \"wildcard type is legal only in \\'*/*\\' (all mime types)\")\", \"throw $r12\"],\"parseMimeType.68\":[\"$r10 = new java.util.LinkedHashMap\", \"specialinvoke $r10.<java.util.LinkedHashMap: void <init>(int)>(4)\", \"r30 = $r10\"],\"parseMimeType.81\":[\"$r8 = new org.springframework.util.MimeType\", \"specialinvoke $r8.<org.springframework.util.MimeType: void <init>(java.lang.String,java.lang.String,java.util.Map)>(r1, r2, r30)\", \"return $r8\"],\"parseMimeType.85\":[\"$r18 = new org.springframework.util.InvalidMimeTypeException\", \"$r19 = new java.lang.StringBuilder\", \"specialinvoke $r19.<java.lang.StringBuilder: void <init>()>()\", \"$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"unsupported charset \\'\")\"],\"parseMimeType.93\":[\"specialinvoke $r18.<org.springframework.util.InvalidMimeTypeException: void <init>(java.lang.String,java.lang.String)>(r0, $r24)\", \"throw $r18\"],\"parseMimeType.96\":[\"$r26 = new org.springframework.util.InvalidMimeTypeException\"],\"parseMimeType.98\":[\"specialinvoke $r26.<org.springframework.util.InvalidMimeTypeException: void <init>(java.lang.String,java.lang.String)>(r0, $r27)\", \"throw $r26\"],\"<clinit>.66\":[\"$r1 = new java.util.Random\", \"specialinvoke $r1.<java.util.Random: void <init>()>()\", \"<org.springframework.util.MimeTypeUtils: java.util.Random RND> = $r1\", \"$r2 = new org.springframework.util.MimeType$SpecificityComparator\", \"specialinvoke $r2.<org.springframework.util.MimeType$SpecificityComparator: void <init>()>()\", \"<org.springframework.util.MimeTypeUtils: java.util.Comparator SPECIFICITY_COMPARATOR> = $r2\"]},\"rhs\" : {\"parseMimeType.3\":[\"r34 = new org.springframework.util.InvalidMimeTypeException\", \"specialinvoke r34.<org.springframework.util.InvalidMimeTypeException: void <init>(java.lang.String,java.lang.String)>(r0, \"\\'mimeType\\' must not be empty\")\", \"r44 = (java.lang.Throwable) r34\", \"throw r44\"],\"parseMimeType.14\":[\"r35 = new org.springframework.util.InvalidMimeTypeException\", \"specialinvoke r35.<org.springframework.util.InvalidMimeTypeException: void <init>(java.lang.String,java.lang.String)>(r0, \"\\'mimeType\\' must not be empty\")\", \"r45 = (java.lang.Throwable) r35\", \"throw r45\"],\"parseMimeType.23\":[\"r36 = new org.springframework.util.InvalidMimeTypeException\", \"specialinvoke r36.<org.springframework.util.InvalidMimeTypeException: void <init>(java.lang.String,java.lang.String)>(r0, \"does not contain \\'/\\'\")\", \"r46 = (java.lang.Throwable) r36\", \"throw r46\"],\"parseMimeType.29\":[\"r37 = new org.springframework.util.InvalidMimeTypeException\", \"specialinvoke r37.<org.springframework.util.InvalidMimeTypeException: void <init>(java.lang.String,java.lang.String)>(r0, \"does not contain subtype after \\'/\\'\")\", \"r47 = (java.lang.Throwable) r37\", \"throw r47\"],\"parseMimeType.42\":[\"r38 = new org.springframework.util.InvalidMimeTypeException\", \"specialinvoke r38.<org.springframework.util.InvalidMimeTypeException: void <init>(java.lang.String,java.lang.String)>(r0, \"wildcard type is legal only in \\'*/*\\' (all mime types)\")\", \"r48 = (java.lang.Throwable) r38\", \"throw r48\"],\"parseMimeType.68\":[\"r39 = new java.util.LinkedHashMap\", \"specialinvoke r39.<java.util.LinkedHashMap: void <init>(int)>(4)\", \"r30 = r39\"],\"parseMimeType.81\":[\"r40 = new org.springframework.util.MimeType\", \"specialinvoke r40.<org.springframework.util.MimeType: void <init>(java.lang.String,java.lang.String,java.util.Map)>(r1, r2, r30)\", \"return r40\"],\"parseMimeType.85\":[\"r42 = new org.springframework.util.InvalidMimeTypeException\", \"r41 = new java.lang.StringBuilder\", \"specialinvoke r41.<java.lang.StringBuilder: void <init>()>()\", \"$r20 = virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"unsupported charset \\'\")\"],\"parseMimeType.93\":[\"specialinvoke r42.<org.springframework.util.InvalidMimeTypeException: void <init>(java.lang.String,java.lang.String)>(r0, $r24)\", \"r49 = (java.lang.Throwable) r42\", \"throw r49\"],\"parseMimeType.96\":[\"r43 = new org.springframework.util.InvalidMimeTypeException\"],\"parseMimeType.98\":[\"specialinvoke r43.<org.springframework.util.InvalidMimeTypeException: void <init>(java.lang.String,java.lang.String)>(r0, $r27)\", \"r50 = (java.lang.Throwable) r43\", \"throw r50\"],\"<clinit>.66\":[\"r13 = new java.util.Random\", \"specialinvoke r13.<java.util.Random: void <init>()>()\", \"<org.springframework.util.MimeTypeUtils: java.util.Random RND> = r13\", \"r14 = new org.springframework.util.MimeType$SpecificityComparator\", \"specialinvoke r14.<org.springframework.util.MimeType$SpecificityComparator: void <init>()>()\", \"r15 = (java.util.Comparator) r14\", \"<org.springframework.util.MimeTypeUtils: java.util.Comparator SPECIFICITY_COMPARATOR> = r15\"]}}",
            "affectedFile": "/org/springframework/util/MimeTypeUtils.class",
            "contained": true
        }
    ],
    "vulnerable": true
}