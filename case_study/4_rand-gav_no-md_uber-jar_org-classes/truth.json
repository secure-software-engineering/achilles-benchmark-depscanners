{
  "project": {
    "groupId": "class-Random.gav-Original.metadata-false.uberjar-true.eloquent",
    "artifactId": "snuffles",
    "version": "19578738530"
  },
  "dependencies": [
    {
      "org_gav": {
        "groupId": "org.springframework",
        "artifactId": "spring-web",
        "version": "5.0.5.RELEASE"
      },
      "gav": {
        "groupId": "dreamy",
        "artifactId": "spencer.grammer",
        "version": "19528286950"
      },
      "cve": "CVE-2018-15756",
      "vulnerable": true,
      "details": [
        {
          "file": "/org/springframework/http/HttpRange.class",
          "qname": "org.springframework.http.HttpRange",
          "contained": true,
          "include": true,
          "editable": true
        },
        {
          "file": "/org/springframework/http/HttpRange.class",
          "qname": "org.springframework.http.HttpRange",
          "contained": true,
          "include": true,
          "editable": true
        },
        {
          "file": "/org/springframework/http/HttpRange.class",
          "qname": "org.springframework.http.HttpRange",
          "contained": true,
          "include": true,
          "editable": true
        },
        {
          "file": "/org/springframework/http/HttpRange.class",
          "qname": "org.springframework.http.HttpRange.getLengthFor(Resource)",
          "contained": true,
          "include": true,
          "editable": true
        },
        {
          "file": "/org/springframework/http/HttpRange.class",
          "qname": "org.springframework.http.HttpRange.getLengthFor(Resource)",
          "contained": true,
          "include": true,
          "editable": true
        },
        {
          "file": "/org/springframework/http/HttpRange.class",
          "qname": "org.springframework.http.HttpRange.getLengthFor(Resource)",
          "contained": true,
          "include": true,
          "editable": true
        },
        {
          "file": "/org/springframework/http/HttpRange.class",
          "qname": "org.springframework.http.HttpRange.parseRanges(String)",
          "contained": true,
          "include": true,
          "editable": true
        },
        {
          "file": "/org/springframework/http/HttpRange.class",
          "qname": "org.springframework.http.HttpRange.parseRanges(String)",
          "contained": true,
          "include": true,
          "editable": true
        },
        {
          "file": "/org/springframework/http/HttpRange.class",
          "qname": "org.springframework.http.HttpRange.parseRanges(String)",
          "contained": true,
          "include": true,
          "editable": true
        },
        {
          "file": "/org/springframework/http/HttpRange.class",
          "qname": "org.springframework.http.HttpRange.toResourceRegion(Resource)",
          "contained": true,
          "include": true,
          "editable": true
        },
        {
          "file": "/org/springframework/http/HttpRange.class",
          "qname": "org.springframework.http.HttpRange.toResourceRegion(Resource)",
          "contained": true,
          "include": true,
          "editable": true
        },
        {
          "file": "/org/springframework/http/HttpRange.class",
          "qname": "org.springframework.http.HttpRange.toResourceRegion(Resource)",
          "contained": true,
          "include": true,
          "editable": true
        },
        {
          "file": "/org/springframework/http/HttpRange.class",
          "qname": "org.springframework.http.HttpRange.toResourceRegions(List,Resource)",
          "contained": true,
          "include": true,
          "editable": true
        },
        {
          "file": "/org/springframework/http/HttpRange.class",
          "qname": "org.springframework.http.HttpRange.toResourceRegions(List,Resource)",
          "contained": true,
          "include": true,
          "editable": true
        },
        {
          "file": "/org/springframework/http/HttpRange.class",
          "qname": "org.springframework.http.HttpRange.toResourceRegions(List,Resource)",
          "contained": true,
          "include": true,
          "editable": true
        },
        {
          "file": "/org/springframework/http/HttpRangeTests.class",
          "qname": "org.springframework.http.HttpRangeTests",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/http/HttpRangeTests.class",
          "qname": "org.springframework.http.HttpRangeTests",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/http/HttpRangeTests.class",
          "qname": "org.springframework.http.HttpRangeTests",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/http/HttpRangeTests.class",
          "qname": "org.springframework.http.HttpRangeTests.parseRangesValidations()",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/http/HttpRangeTests.class",
          "qname": "org.springframework.http.HttpRangeTests.parseRangesValidations()",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/http/HttpRangeTests.class",
          "qname": "org.springframework.http.HttpRangeTests.parseRangesValidations()",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/http/HttpRangeTests.class",
          "qname": "org.springframework.http.HttpRangeTests.toResourceRegionsValidations()",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/http/HttpRangeTests.class",
          "qname": "org.springframework.http.HttpRangeTests.toResourceRegionsValidations()",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/http/HttpRangeTests.class",
          "qname": "org.springframework.http.HttpRangeTests.toResourceRegionsValidations()",
          "contained": false,
          "include": false,
          "editable": false
        }
      ],
      "timestamp": "2018-11-30"
    },
    {
      "org_gav": {
        "groupId": "org.springframework",
        "artifactId": "spring-webmvc",
        "version": "5.0.0.RELEASE"
      },
      "gav": {
        "groupId": "dreamy",
        "artifactId": "spencer.grammer",
        "version": "19528286950"
      },
      "cve": "CVE-2018-1271",
      "vulnerable": true,
      "details": [
        {
          "file": "/org/springframework/web/reactive/resource/PathResourceResolver.class",
          "qname": "org.springframework.web.reactive.resource.PathResourceResolver",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/web/reactive/resource/PathResourceResolver.class",
          "qname": "org.springframework.web.reactive.resource.PathResourceResolver",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/web/reactive/resource/PathResourceResolver.class",
          "qname": "org.springframework.web.reactive.resource.PathResourceResolver",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/web/reactive/resource/PathResourceResolver.class",
          "qname": "org.springframework.web.reactive.resource.PathResourceResolver.getResource(String,Resource)",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/web/reactive/resource/PathResourceResolver.class",
          "qname": "org.springframework.web.reactive.resource.PathResourceResolver.isInvalidEncodedPath(String)",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/web/reactive/resource/PathResourceResolver.class",
          "qname": "org.springframework.web.reactive.resource.PathResourceResolver.isInvalidEncodedPath(String)",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/web/reactive/resource/PathResourceResolver.class",
          "qname": "org.springframework.web.reactive.resource.PathResourceResolver.isInvalidEncodedPath(String)",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/web/reactive/resource/PathResourceResolver.class",
          "qname": "org.springframework.web.reactive.resource.PathResourceResolver.isResourceUnderLocation(Resource,Resource)",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/web/reactive/resource/ResourceWebHandler.class",
          "qname": "org.springframework.web.reactive.resource.ResourceWebHandler",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/web/reactive/resource/ResourceWebHandler.class",
          "qname": "org.springframework.web.reactive.resource.ResourceWebHandler",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/web/reactive/resource/ResourceWebHandler.class",
          "qname": "org.springframework.web.reactive.resource.ResourceWebHandler.cleanDuplicateSlashes(String)",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/web/reactive/resource/ResourceWebHandler.class",
          "qname": "org.springframework.web.reactive.resource.ResourceWebHandler.cleanLeadingSlash(String)",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/web/reactive/resource/ResourceWebHandler.class",
          "qname": "org.springframework.web.reactive.resource.ResourceWebHandler.getResource(ServerWebExchange)",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/web/reactive/resource/ResourceWebHandler.class",
          "qname": "org.springframework.web.reactive.resource.ResourceWebHandler.getResource(ServerWebExchange)",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/web/reactive/resource/ResourceWebHandler.class",
          "qname": "org.springframework.web.reactive.resource.ResourceWebHandler.isInvalidEncodedPath(String)",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/web/reactive/resource/ResourceWebHandler.class",
          "qname": "org.springframework.web.reactive.resource.ResourceWebHandler.processPath(String)",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/web/reactive/resource/ResourceWebHandlerTests.class",
          "qname": "org.springframework.web.reactive.resource.ResourceWebHandlerTests",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/web/reactive/resource/ResourceWebHandlerTests.class",
          "qname": "org.springframework.web.reactive.resource.ResourceWebHandlerTests.invalidPath()",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/web/reactive/resource/ResourceWebHandlerTests.class",
          "qname": "org.springframework.web.reactive.resource.ResourceWebHandlerTests.testInvalidPath()",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/web/reactive/resource/ResourceWebHandlerTests.class",
          "qname": "org.springframework.web.reactive.resource.ResourceWebHandlerTests.testInvalidPath(HttpMethod)",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/web/reactive/resource/ResourceWebHandlerTests.class",
          "qname": "org.springframework.web.reactive.resource.ResourceWebHandlerTests.testInvalidPath(HttpMethod,String,Resource)",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/web/reactive/resource/ResourceWebHandlerTests.class",
          "qname": "org.springframework.web.reactive.resource.ResourceWebHandlerTests.testInvalidPath(String,ResourceWebHandler)",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/web/reactive/resource/ResourceWebHandlerTests.class",
          "qname": "org.springframework.web.reactive.resource.ResourceWebHandlerTests.testResolvePathWithTraversal()",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/web/reactive/resource/ResourceWebHandlerTests.class",
          "qname": "org.springframework.web.reactive.resource.ResourceWebHandlerTests.testResolvePathWithTraversal(HttpMethod)",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/web/reactive/resource/ResourceWebHandlerTests.class",
          "qname": "org.springframework.web.reactive.resource.ResourceWebHandlerTests.testResolvePathWithTraversal(HttpMethod,String,Resource)",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/web/servlet/resource/PathResourceResolver.class",
          "qname": "org.springframework.web.servlet.resource.PathResourceResolver",
          "contained": true,
          "include": true,
          "editable": true
        },
        {
          "file": "/org/springframework/web/servlet/resource/PathResourceResolver.class",
          "qname": "org.springframework.web.servlet.resource.PathResourceResolver",
          "contained": true,
          "include": true,
          "editable": true
        },
        {
          "file": "/org/springframework/web/servlet/resource/PathResourceResolver.class",
          "qname": "org.springframework.web.servlet.resource.PathResourceResolver",
          "contained": true,
          "include": true,
          "editable": true
        },
        {
          "file": "/org/springframework/web/servlet/resource/PathResourceResolver.class",
          "qname": "org.springframework.web.servlet.resource.PathResourceResolver",
          "contained": true,
          "include": true,
          "editable": true
        },
        {
          "file": "/org/springframework/web/servlet/resource/PathResourceResolver.class",
          "qname": "org.springframework.web.servlet.resource.PathResourceResolver",
          "contained": true,
          "include": true,
          "editable": true
        },
        {
          "file": "/org/springframework/web/servlet/resource/PathResourceResolver.class",
          "qname": "org.springframework.web.servlet.resource.PathResourceResolver.getResource(String,Resource)",
          "contained": true,
          "include": true,
          "editable": true
        },
        {
          "file": "/org/springframework/web/servlet/resource/PathResourceResolver.class",
          "qname": "org.springframework.web.servlet.resource.PathResourceResolver.isInvalidEncodedPath(String)",
          "contained": true,
          "include": true,
          "editable": true
        },
        {
          "file": "/org/springframework/web/servlet/resource/PathResourceResolver.class",
          "qname": "org.springframework.web.servlet.resource.PathResourceResolver.isInvalidEncodedPath(String)",
          "contained": true,
          "include": true,
          "editable": true
        },
        {
          "file": "/org/springframework/web/servlet/resource/PathResourceResolver.class",
          "qname": "org.springframework.web.servlet.resource.PathResourceResolver.isInvalidEncodedPath(String)",
          "contained": true,
          "include": true,
          "editable": true
        },
        {
          "file": "/org/springframework/web/servlet/resource/PathResourceResolver.class",
          "qname": "org.springframework.web.servlet.resource.PathResourceResolver.isInvalidEncodedPath(String)",
          "contained": true,
          "include": true,
          "editable": true
        },
        {
          "file": "/org/springframework/web/servlet/resource/PathResourceResolver.class",
          "qname": "org.springframework.web.servlet.resource.PathResourceResolver.isInvalidEncodedPath(String)",
          "contained": true,
          "include": true,
          "editable": true
        },
        {
          "file": "/org/springframework/web/servlet/resource/PathResourceResolver.class",
          "qname": "org.springframework.web.servlet.resource.PathResourceResolver.isResourceUnderLocation(Resource,Resource)",
          "contained": true,
          "include": true,
          "editable": true
        },
        {
          "file": "/org/springframework/web/servlet/resource/PathResourceResolver.class",
          "qname": "org.springframework.web.servlet.resource.PathResourceResolver.isResourceUnderLocation(Resource,Resource)",
          "contained": true,
          "include": true,
          "editable": true
        },
        {
          "file": "/org/springframework/web/servlet/resource/PathResourceResolver.class",
          "qname": "org.springframework.web.servlet.resource.PathResourceResolver.shouldEncodeRelativePath(Resource)",
          "contained": true,
          "include": true,
          "editable": true
        },
        {
          "file": "/org/springframework/web/servlet/resource/PathResourceResolver.class",
          "qname": "org.springframework.web.servlet.resource.PathResourceResolver.shouldEncodeRelativePath(Resource)",
          "contained": true,
          "include": true,
          "editable": true
        },
        {
          "file": "/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.class",
          "qname": "org.springframework.web.servlet.resource.ResourceHttpRequestHandler",
          "contained": true,
          "include": true,
          "editable": true
        },
        {
          "file": "/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.class",
          "qname": "org.springframework.web.servlet.resource.ResourceHttpRequestHandler",
          "contained": true,
          "include": true,
          "editable": true
        },
        {
          "file": "/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.class",
          "qname": "org.springframework.web.servlet.resource.ResourceHttpRequestHandler",
          "contained": true,
          "include": true,
          "editable": true
        },
        {
          "file": "/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.class",
          "qname": "org.springframework.web.servlet.resource.ResourceHttpRequestHandler.cleanDuplicateSlashes(String)",
          "contained": true,
          "include": true,
          "editable": true
        },
        {
          "file": "/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.class",
          "qname": "org.springframework.web.servlet.resource.ResourceHttpRequestHandler.cleanDuplicateSlashes(String)",
          "contained": true,
          "include": true,
          "editable": true
        },
        {
          "file": "/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.class",
          "qname": "org.springframework.web.servlet.resource.ResourceHttpRequestHandler.cleanLeadingSlash(String)",
          "contained": true,
          "include": true,
          "editable": true
        },
        {
          "file": "/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.class",
          "qname": "org.springframework.web.servlet.resource.ResourceHttpRequestHandler.cleanLeadingSlash(String)",
          "contained": true,
          "include": true,
          "editable": true
        },
        {
          "file": "/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.class",
          "qname": "org.springframework.web.servlet.resource.ResourceHttpRequestHandler.cleanLeadingSlash(String)",
          "contained": true,
          "include": true,
          "editable": true
        },
        {
          "file": "/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.class",
          "qname": "org.springframework.web.servlet.resource.ResourceHttpRequestHandler.getResource(HttpServletRequest)",
          "contained": true,
          "include": true,
          "editable": true
        },
        {
          "file": "/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.class",
          "qname": "org.springframework.web.servlet.resource.ResourceHttpRequestHandler.getResource(HttpServletRequest)",
          "contained": true,
          "include": true,
          "editable": true
        },
        {
          "file": "/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.class",
          "qname": "org.springframework.web.servlet.resource.ResourceHttpRequestHandler.getResource(HttpServletRequest)",
          "contained": true,
          "include": true,
          "editable": true
        },
        {
          "file": "/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.class",
          "qname": "org.springframework.web.servlet.resource.ResourceHttpRequestHandler.isInvalidEncodedPath(String)",
          "contained": true,
          "include": true,
          "editable": true
        },
        {
          "file": "/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.class",
          "qname": "org.springframework.web.servlet.resource.ResourceHttpRequestHandler.isInvalidEncodedPath(String)",
          "contained": true,
          "include": true,
          "editable": true
        },
        {
          "file": "/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.class",
          "qname": "org.springframework.web.servlet.resource.ResourceHttpRequestHandler.isInvalidPath(String)",
          "contained": true,
          "include": true,
          "editable": true
        },
        {
          "file": "/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.class",
          "qname": "org.springframework.web.servlet.resource.ResourceHttpRequestHandler.isInvalidPath(String)",
          "contained": true,
          "include": true,
          "editable": true
        },
        {
          "file": "/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.class",
          "qname": "org.springframework.web.servlet.resource.ResourceHttpRequestHandler.processPath(String)",
          "contained": true,
          "include": true,
          "editable": true
        },
        {
          "file": "/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.class",
          "qname": "org.springframework.web.servlet.resource.ResourceHttpRequestHandler.processPath(String)",
          "contained": true,
          "include": true,
          "editable": true
        },
        {
          "file": "/org/springframework/web/servlet/resource/ResourceHttpRequestHandlerTests.class",
          "qname": "org.springframework.web.servlet.resource.ResourceHttpRequestHandlerTests",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/web/servlet/resource/ResourceHttpRequestHandlerTests.class",
          "qname": "org.springframework.web.servlet.resource.ResourceHttpRequestHandlerTests",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/web/servlet/resource/ResourceHttpRequestHandlerTests.class",
          "qname": "org.springframework.web.servlet.resource.ResourceHttpRequestHandlerTests.initAllowedLocations()",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/web/servlet/resource/ResourceHttpRequestHandlerTests.class",
          "qname": "org.springframework.web.servlet.resource.ResourceHttpRequestHandlerTests.invalidPath()",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/web/servlet/resource/ResourceHttpRequestHandlerTests.class",
          "qname": "org.springframework.web.servlet.resource.ResourceHttpRequestHandlerTests.invalidPath()",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/web/servlet/resource/ResourceHttpRequestHandlerTests.class",
          "qname": "org.springframework.web.servlet.resource.ResourceHttpRequestHandlerTests.processPath()",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/web/servlet/resource/ResourceHttpRequestHandlerTests.class",
          "qname": "org.springframework.web.servlet.resource.ResourceHttpRequestHandlerTests.resolvePathWithTraversal()",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/web/servlet/resource/ResourceHttpRequestHandlerTests.class",
          "qname": "org.springframework.web.servlet.resource.ResourceHttpRequestHandlerTests.resolvePathWithTraversal()",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/web/servlet/resource/ResourceHttpRequestHandlerTests.class",
          "qname": "org.springframework.web.servlet.resource.ResourceHttpRequestHandlerTests.testInvalidPath()",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/web/servlet/resource/ResourceHttpRequestHandlerTests.class",
          "qname": "org.springframework.web.servlet.resource.ResourceHttpRequestHandlerTests.testInvalidPath()",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/web/servlet/resource/ResourceHttpRequestHandlerTests.class",
          "qname": "org.springframework.web.servlet.resource.ResourceHttpRequestHandlerTests.testInvalidPath(HttpMethod)",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/web/servlet/resource/ResourceHttpRequestHandlerTests.class",
          "qname": "org.springframework.web.servlet.resource.ResourceHttpRequestHandlerTests.testInvalidPath(HttpMethod)",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/web/servlet/resource/ResourceHttpRequestHandlerTests.class",
          "qname": "org.springframework.web.servlet.resource.ResourceHttpRequestHandlerTests.testInvalidPath(Resource,String)",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/web/servlet/resource/ResourceHttpRequestHandlerTests.class",
          "qname": "org.springframework.web.servlet.resource.ResourceHttpRequestHandlerTests.testInvalidPath(Resource,String)",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/web/servlet/resource/ResourceHttpRequestHandlerTests.class",
          "qname": "org.springframework.web.servlet.resource.ResourceHttpRequestHandlerTests.testInvalidPath(String,ResourceHttpRequestHandler)",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/web/servlet/resource/ResourceHttpRequestHandlerTests.class",
          "qname": "org.springframework.web.servlet.resource.ResourceHttpRequestHandlerTests.testInvalidPath(String,ResourceHttpRequestHandler)",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/web/servlet/resource/ResourceHttpRequestHandlerTests.class",
          "qname": "org.springframework.web.servlet.resource.ResourceHttpRequestHandlerTests.testResolvePathWithTraversal(HttpMethod)",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/web/servlet/resource/ResourceHttpRequestHandlerTests.class",
          "qname": "org.springframework.web.servlet.resource.ResourceHttpRequestHandlerTests.testResolvePathWithTraversal(HttpMethod)",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/web/servlet/resource/ResourceHttpRequestHandlerTests.class",
          "qname": "org.springframework.web.servlet.resource.ResourceHttpRequestHandlerTests.testResolvePathWithTraversal(Resource,String)",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/web/servlet/resource/ResourceHttpRequestHandlerTests.class",
          "qname": "org.springframework.web.servlet.resource.ResourceHttpRequestHandlerTests.testResolvePathWithTraversal(Resource,String)",
          "contained": false,
          "include": false,
          "editable": false
        }
      ],
      "timestamp": "2018-11-30"
    },
    {
      "org_gav": {
        "groupId": "org.springframework",
        "artifactId": "spring-expression",
        "version": "5.0.4.RELEASE"
      },
      "gav": {
        "groupId": "dreamy",
        "artifactId": "spencer.grammer",
        "version": "19528286950"
      },
      "cve": "CVE-2018-1270",
      "vulnerable": true,
      "details": [
        {
          "file": "/org/springframework/expression/spel/CodeFlow.class",
          "qname": "org.springframework.expression.spel.CodeFlow",
          "contained": true,
          "include": true,
          "editable": true
        },
        {
          "file": "/org/springframework/expression/spel/CodeFlow.class",
          "qname": "org.springframework.expression.spel.CodeFlow",
          "contained": true,
          "include": true,
          "editable": true
        },
        {
          "file": "/org/springframework/expression/spel/CodeFlow.class",
          "qname": "org.springframework.expression.spel.CodeFlow.toBoxedDescriptor(String)",
          "contained": true,
          "include": true,
          "editable": true
        },
        {
          "file": "/org/springframework/expression/spel/CodeFlow.class",
          "qname": "org.springframework.expression.spel.CodeFlow.toBoxedDescriptor(String)",
          "contained": true,
          "include": true,
          "editable": true
        },
        {
          "file": "/org/springframework/expression/spel/SpelCompilationCoverageTests.class",
          "qname": "org.springframework.expression.spel.SpelCompilationCoverageTests",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/expression/spel/SpelCompilationCoverageTests.class",
          "qname": "org.springframework.expression.spel.SpelCompilationCoverageTests",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/expression/spel/SpelCompilationCoverageTests.class",
          "qname": "org.springframework.expression.spel.SpelCompilationCoverageTests$FooObjectHolder",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/expression/spel/SpelCompilationCoverageTests.class",
          "qname": "org.springframework.expression.spel.SpelCompilationCoverageTests$FooObjectHolder",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/expression/spel/SpelCompilationCoverageTests.class",
          "qname": "org.springframework.expression.spel.SpelCompilationCoverageTests$FooObjectHolder.getFoo()",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/expression/spel/SpelCompilationCoverageTests.class",
          "qname": "org.springframework.expression.spel.SpelCompilationCoverageTests$FooObjectHolder.getFoo()",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/expression/spel/SpelCompilationCoverageTests.class",
          "qname": "org.springframework.expression.spel.SpelCompilationCoverageTests.compilationOfBasicNullSafeMethodReference()",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/expression/spel/SpelCompilationCoverageTests.class",
          "qname": "org.springframework.expression.spel.SpelCompilationCoverageTests.compilationOfBasicNullSafeMethodReference()",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/expression/spel/SpelCompilationCoverageTests.class",
          "qname": "org.springframework.expression.spel.SpelCompilationCoverageTests.failsWhenSettingContextForExpression_SPR12326()",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/expression/spel/SpelCompilationCoverageTests.class",
          "qname": "org.springframework.expression.spel.SpelCompilationCoverageTests.failsWhenSettingContextForExpression_SPR12326()",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/expression/spel/SpelCompilationCoverageTests.class",
          "qname": "org.springframework.expression.spel.SpelCompilationCoverageTests.nullsafeFieldPropertyDereferencing_SPR16489()",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/expression/spel/SpelCompilationCoverageTests.class",
          "qname": "org.springframework.expression.spel.SpelCompilationCoverageTests.nullsafeFieldPropertyDereferencing_SPR16489()",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/expression/spel/SpelCompilationCoverageTests.class",
          "qname": "org.springframework.expression.spel.SpelCompilationCoverageTests.nullsafeMethodChaining_SPR16489()",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/expression/spel/SpelCompilationCoverageTests.class",
          "qname": "org.springframework.expression.spel.SpelCompilationCoverageTests.nullsafeMethodChaining_SPR16489()",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/expression/spel/ast/MethodReference.class",
          "qname": "org.springframework.expression.spel.ast.MethodReference",
          "contained": true,
          "include": true,
          "editable": true
        },
        {
          "file": "/org/springframework/expression/spel/ast/MethodReference.class",
          "qname": "org.springframework.expression.spel.ast.MethodReference",
          "contained": true,
          "include": true,
          "editable": true
        },
        {
          "file": "/org/springframework/expression/spel/ast/MethodReference.class",
          "qname": "org.springframework.expression.spel.ast.MethodReference.generateCode(MethodVisitor,CodeFlow)",
          "contained": true,
          "include": true,
          "editable": true
        },
        {
          "file": "/org/springframework/expression/spel/ast/MethodReference.class",
          "qname": "org.springframework.expression.spel.ast.MethodReference.generateCode(MethodVisitor,CodeFlow)",
          "contained": true,
          "include": true,
          "editable": true
        },
        {
          "file": "/org/springframework/expression/spel/ast/MethodReference.class",
          "qname": "org.springframework.expression.spel.ast.MethodReference.updateExitTypeDescriptor()",
          "contained": true,
          "include": true,
          "editable": true
        },
        {
          "file": "/org/springframework/expression/spel/ast/MethodReference.class",
          "qname": "org.springframework.expression.spel.ast.MethodReference.updateExitTypeDescriptor()",
          "contained": true,
          "include": true,
          "editable": true
        },
        {
          "file": "/org/springframework/expression/spel/ast/PropertyOrFieldReference.class",
          "qname": "org.springframework.expression.spel.ast.PropertyOrFieldReference",
          "contained": true,
          "include": true,
          "editable": true
        },
        {
          "file": "/org/springframework/expression/spel/ast/PropertyOrFieldReference.class",
          "qname": "org.springframework.expression.spel.ast.PropertyOrFieldReference",
          "contained": true,
          "include": true,
          "editable": true
        },
        {
          "file": "/org/springframework/expression/spel/ast/PropertyOrFieldReference.class",
          "qname": "org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue",
          "contained": true,
          "include": true,
          "editable": true
        },
        {
          "file": "/org/springframework/expression/spel/ast/PropertyOrFieldReference.class",
          "qname": "org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue",
          "contained": true,
          "include": true,
          "editable": true
        },
        {
          "file": "/org/springframework/expression/spel/ast/PropertyOrFieldReference.class",
          "qname": "org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue()",
          "contained": true,
          "include": true,
          "editable": true
        },
        {
          "file": "/org/springframework/expression/spel/ast/PropertyOrFieldReference.class",
          "qname": "org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue()",
          "contained": true,
          "include": true,
          "editable": true
        },
        {
          "file": "/org/springframework/expression/spel/ast/PropertyOrFieldReference.class",
          "qname": "org.springframework.expression.spel.ast.PropertyOrFieldReference.generateCode(MethodVisitor,CodeFlow)",
          "contained": true,
          "include": true,
          "editable": true
        },
        {
          "file": "/org/springframework/expression/spel/ast/PropertyOrFieldReference.class",
          "qname": "org.springframework.expression.spel.ast.PropertyOrFieldReference.generateCode(MethodVisitor,CodeFlow)",
          "contained": true,
          "include": true,
          "editable": true
        },
        {
          "file": "/org/springframework/expression/spel/ast/PropertyOrFieldReference.class",
          "qname": "org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(ExpressionState)",
          "contained": true,
          "include": true,
          "editable": true
        },
        {
          "file": "/org/springframework/expression/spel/ast/PropertyOrFieldReference.class",
          "qname": "org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(ExpressionState)",
          "contained": true,
          "include": true,
          "editable": true
        },
        {
          "file": "/org/springframework/expression/spel/ast/PropertyOrFieldReference.class",
          "qname": "org.springframework.expression.spel.ast.PropertyOrFieldReference.setExitTypeDescriptor(String)",
          "contained": true,
          "include": true,
          "editable": true
        },
        {
          "file": "/org/springframework/expression/spel/ast/PropertyOrFieldReference.class",
          "qname": "org.springframework.expression.spel.ast.PropertyOrFieldReference.setExitTypeDescriptor(String)",
          "contained": true,
          "include": true,
          "editable": true
        },
        {
          "file": "/org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry.class",
          "qname": "org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry.class",
          "qname": "org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry$SimpMessageHeaderPropertyAccessor",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry.class",
          "qname": "org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry$SimpMessageHeaderPropertyAccessor.getSpecificTargetClasses()",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry.class",
          "qname": "org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry$SimpMessageHeaderPropertyAccessor.read(EvaluationContext,Object,String)",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry.class",
          "qname": "org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry.filterSubscriptions(MultiValueMap,Message)",
          "contained": false,
          "include": false,
          "editable": false
        }
      ],
      "timestamp": "2018-11-30"
    },
    {
      "org_gav": {
        "groupId": "org.springframework",
        "artifactId": "spring-web",
        "version": "5.0.5.RELEASE"
      },
      "gav": {
        "groupId": "dreamy",
        "artifactId": "spencer.grammer",
        "version": "19528286950"
      },
      "cve": "CVE-2018-11039",
      "vulnerable": true,
      "details": [],
      "timestamp": "2018-11-30"
    },
    {
      "org_gav": {
        "groupId": "org.springframework",
        "artifactId": "spring-core",
        "version": "5.0.5.RELEASE"
      },
      "gav": {
        "groupId": "dreamy",
        "artifactId": "spencer.grammer",
        "version": "19528286950"
      },
      "cve": "CVE-2018-1258",
      "vulnerable": false,
      "details": [
        {
          "file": "/org/springframework/security/config/web/server/ServerHttpSecurity.class",
          "qname": "org.springframework.security.config.web.server.ServerHttpSecurity",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/security/config/web/server/ServerHttpSecurity.class",
          "qname": "org.springframework.security.config.web.server.ServerHttpSecurity",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/security/config/web/server/ServerHttpSecurity.class",
          "qname": "org.springframework.security.config.web.server.ServerHttpSecurity$ExceptionHandlingSpec",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/security/config/web/server/ServerHttpSecurity.class",
          "qname": "org.springframework.security.config.web.server.ServerHttpSecurity$ExceptionHandlingSpec",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/security/config/web/server/ServerHttpSecurity.class",
          "qname": "org.springframework.security.config.web.server.ServerHttpSecurity$ExceptionHandlingSpec.accessDeniedHandler(ServerAccessDeniedHandler)",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/security/config/web/server/ServerHttpSecurity.class",
          "qname": "org.springframework.security.config.web.server.ServerHttpSecurity$ExceptionHandlingSpec.accessDeniedHandler(ServerAccessDeniedHandler)",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/security/config/web/server/ServerHttpSecurity.class",
          "qname": "org.springframework.security.config.web.server.ServerHttpSecurity.build()",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/security/config/web/server/ServerHttpSecurity.class",
          "qname": "org.springframework.security.config.web.server.ServerHttpSecurity.build()",
          "contained": false,
          "include": false,
          "editable": false
        }
      ],
      "timestamp": "2018-11-30"
    },
    {
      "org_gav": {
        "groupId": "com.google.guava",
        "artifactId": "guava",
        "version": "23.0"
      },
      "gav": {
        "groupId": "dreamy",
        "artifactId": "spencer.grammer",
        "version": "19528286950"
      },
      "cve": "CVE-2018-10237",
      "vulnerable": true,
      "details": [
        {
          "file": "guava-gwt/src/com/google/common/collect/CompoundOrdering_CustomFieldSerializer.class",
          "qname": "com.google.common.collect.CompoundOrdering_CustomFieldSerializer",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "guava-gwt/src/com/google/common/collect/CompoundOrdering_CustomFieldSerializer.class",
          "qname": "com.google.common.collect.CompoundOrdering_CustomFieldSerializer.instantiate(SerializationStreamReader)",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "android/guava/src/com/google/common/util/concurrent/AtomicDoubleArray.class",
          "qname": "com.google.common.util.concurrent.AtomicDoubleArray",
          "contained": true,
          "include": true,
          "editable": true
        },
        {
          "file": "android/guava/src/com/google/common/util/concurrent/AtomicDoubleArray.class",
          "qname": "com.google.common.util.concurrent.AtomicDoubleArray.readObject(ObjectInputStream)",
          "contained": true,
          "include": true,
          "editable": true
        }
      ],
      "timestamp": "2018-11-30"
    },
    {
      "org_gav": {
        "groupId": "org.springframework",
        "artifactId": "spring-core",
        "version": "5.0.5.RELEASE"
      },
      "gav": {
        "groupId": "dreamy",
        "artifactId": "spencer.grammer",
        "version": "19528286950"
      },
      "cve": "CVE-2018-11039",
      "vulnerable": false,
      "details": [
        {
          "file": "/org/springframework/web/filter/HiddenHttpMethodFilter.class",
          "qname": "org.springframework.web.filter.HiddenHttpMethodFilter",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/web/filter/HiddenHttpMethodFilter.class",
          "qname": "org.springframework.web.filter.HiddenHttpMethodFilter$HttpMethodRequestWrapper",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/web/filter/HiddenHttpMethodFilter.class",
          "qname": "org.springframework.web.filter.HiddenHttpMethodFilter$HttpMethodRequestWrapper(HttpServletRequest,String)",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/web/filter/HiddenHttpMethodFilter.class",
          "qname": "org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HttpServletRequest,HttpServletResponse,FilterChain)",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/web/filter/HiddenHttpMethodFilterTests.class",
          "qname": "org.springframework.web.filter.HiddenHttpMethodFilterTests",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/web/filter/HiddenHttpMethodFilterTests.class",
          "qname": "org.springframework.web.filter.HiddenHttpMethodFilterTests$1",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/web/filter/HiddenHttpMethodFilterTests.class",
          "qname": "org.springframework.web.filter.HiddenHttpMethodFilterTests$1.doFilter(ServletRequest,ServletResponse)",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/web/filter/HiddenHttpMethodFilterTests.class",
          "qname": "org.springframework.web.filter.HiddenHttpMethodFilterTests$2",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/web/filter/HiddenHttpMethodFilterTests.class",
          "qname": "org.springframework.web.filter.HiddenHttpMethodFilterTests$2.doFilter(ServletRequest,ServletResponse)",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/web/filter/HiddenHttpMethodFilterTests.class",
          "qname": "org.springframework.web.filter.HiddenHttpMethodFilterTests.filterWithNoParameter()",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/web/filter/HiddenHttpMethodFilterTests.class",
          "qname": "org.springframework.web.filter.HiddenHttpMethodFilterTests.filterWithParameter()",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/web/filter/HiddenHttpMethodFilterTests.class",
          "qname": "org.springframework.web.filter.HiddenHttpMethodFilterTests.filterWithParameterDisallowedMethods()",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/web/filter/HiddenHttpMethodFilterTests.class",
          "qname": "org.springframework.web.filter.HiddenHttpMethodFilterTests.filterWithParameterForMethod(String,String)",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/web/filter/reactive/HiddenHttpMethodFilter.class",
          "qname": "org.springframework.web.filter.reactive.HiddenHttpMethodFilter",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/web/filter/reactive/HiddenHttpMethodFilter.class",
          "qname": "org.springframework.web.filter.reactive.HiddenHttpMethodFilter.mapExchange(ServerWebExchange,String)",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/web/filter/reactive/HiddenHttpMethodFilterTests.class",
          "qname": "org.springframework.web.filter.reactive.HiddenHttpMethodFilterTests",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/web/filter/reactive/HiddenHttpMethodFilterTests.class",
          "qname": "org.springframework.web.filter.reactive.HiddenHttpMethodFilterTests.filterWithParameterMethodNotAllowed()",
          "contained": false,
          "include": false,
          "editable": false
        }
      ],
      "timestamp": "2018-11-30"
    },
    {
      "org_gav": {
        "groupId": "org.springframework",
        "artifactId": "spring-core",
        "version": "5.0.5.RELEASE"
      },
      "gav": {
        "groupId": "dreamy",
        "artifactId": "spencer.grammer",
        "version": "19528286950"
      },
      "cve": "CVE-2018-1257",
      "vulnerable": false,
      "details": [
        {
          "file": "/org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry.class",
          "qname": "org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry.class",
          "qname": "org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry.class",
          "qname": "org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry.addSubscriptionInternal(String,String,String,Message)",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry.class",
          "qname": "org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry.addSubscriptionInternal(String,String,String,Message)",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry.class",
          "qname": "org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry.getSelectorExpression(MessageHeaders)",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry.class",
          "qname": "org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry.getSelectorExpression(MessageHeaders)",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry.class",
          "qname": "org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry.setSelectorHeaderName(String)",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry.class",
          "qname": "org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry.setSelectorHeaderName(String)",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/messaging/simp/broker/DefaultSubscriptionRegistryTests.class",
          "qname": "org.springframework.messaging.simp.broker.DefaultSubscriptionRegistryTests",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/messaging/simp/broker/DefaultSubscriptionRegistryTests.class",
          "qname": "org.springframework.messaging.simp.broker.DefaultSubscriptionRegistryTests",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/messaging/simp/broker/DefaultSubscriptionRegistryTests.class",
          "qname": "org.springframework.messaging.simp.broker.DefaultSubscriptionRegistryTests.registerSubscriptionWithSelector()",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/messaging/simp/broker/DefaultSubscriptionRegistryTests.class",
          "qname": "org.springframework.messaging.simp.broker.DefaultSubscriptionRegistryTests.registerSubscriptionWithSelector()",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/messaging/simp/broker/DefaultSubscriptionRegistryTests.class",
          "qname": "org.springframework.messaging.simp.broker.DefaultSubscriptionRegistryTests.registerSubscriptionWithSelectorNotSupported()",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/messaging/simp/broker/DefaultSubscriptionRegistryTests.class",
          "qname": "org.springframework.messaging.simp.broker.DefaultSubscriptionRegistryTests.registerSubscriptionWithSelectorNotSupported()",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/messaging/simp/broker/SimpleBrokerMessageHandler.class",
          "qname": "org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/messaging/simp/broker/SimpleBrokerMessageHandler.class",
          "qname": "org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/messaging/simp/broker/SimpleBrokerMessageHandler.class",
          "qname": "org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler.initSelectorHeaderNameToUse()",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/messaging/simp/broker/SimpleBrokerMessageHandler.class",
          "qname": "org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler.initSelectorHeaderNameToUse()",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/messaging/simp/broker/SimpleBrokerMessageHandler.class",
          "qname": "org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler.setSelectorHeaderName(String)",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/messaging/simp/broker/SimpleBrokerMessageHandler.class",
          "qname": "org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler.setSelectorHeaderName(String)",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/messaging/simp/broker/SimpleBrokerMessageHandler.class",
          "qname": "org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler.setSubscriptionRegistry(SubscriptionRegistry)",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/messaging/simp/broker/SimpleBrokerMessageHandler.class",
          "qname": "org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler.setSubscriptionRegistry(SubscriptionRegistry)",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/messaging/simp/config/SimpleBrokerRegistration.class",
          "qname": "org.springframework.messaging.simp.config.SimpleBrokerRegistration",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/messaging/simp/config/SimpleBrokerRegistration.class",
          "qname": "org.springframework.messaging.simp.config.SimpleBrokerRegistration",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/messaging/simp/config/SimpleBrokerRegistration.class",
          "qname": "org.springframework.messaging.simp.config.SimpleBrokerRegistration.getMessageHandler(SubscribableChannel)",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/messaging/simp/config/SimpleBrokerRegistration.class",
          "qname": "org.springframework.messaging.simp.config.SimpleBrokerRegistration.getMessageHandler(SubscribableChannel)",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/messaging/simp/config/SimpleBrokerRegistration.class",
          "qname": "org.springframework.messaging.simp.config.SimpleBrokerRegistration.setSelectorHeaderName(String)",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/messaging/simp/config/SimpleBrokerRegistration.class",
          "qname": "org.springframework.messaging.simp.config.SimpleBrokerRegistration.setSelectorHeaderName(String)",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser.class",
          "qname": "org.springframework.web.socket.config.MessageBrokerBeanDefinitionParser",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser.class",
          "qname": "org.springframework.web.socket.config.MessageBrokerBeanDefinitionParser",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser.class",
          "qname": "org.springframework.web.socket.config.MessageBrokerBeanDefinitionParser.registerMessageBroker(Element,RuntimeBeanReference,RuntimeBeanReference,RuntimeBeanReference,Object,RuntimeBeanReference,RuntimeBeanReference,ParserContext,Object)",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser.class",
          "qname": "org.springframework.web.socket.config.MessageBrokerBeanDefinitionParser.registerMessageBroker(Element,RuntimeBeanReference,RuntimeBeanReference,RuntimeBeanReference,Object,RuntimeBeanReference,RuntimeBeanReference,ParserContext,Object)",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/web/socket/config/MessageBrokerBeanDefinitionParserTests.class",
          "qname": "org.springframework.web.socket.config.MessageBrokerBeanDefinitionParserTests",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/web/socket/config/MessageBrokerBeanDefinitionParserTests.class",
          "qname": "org.springframework.web.socket.config.MessageBrokerBeanDefinitionParserTests",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/web/socket/config/MessageBrokerBeanDefinitionParserTests.class",
          "qname": "org.springframework.web.socket.config.MessageBrokerBeanDefinitionParserTests.simpleBroker()",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/web/socket/config/MessageBrokerBeanDefinitionParserTests.class",
          "qname": "org.springframework.web.socket.config.MessageBrokerBeanDefinitionParserTests.simpleBroker()",
          "contained": false,
          "include": false,
          "editable": false
        }
      ],
      "timestamp": "2018-11-30"
    },
    {
      "org_gav": {
        "groupId": "org.apache.httpcomponents",
        "artifactId": "httpclient",
        "version": "4.1.3"
      },
      "gav": {
        "groupId": "dreamy",
        "artifactId": "spencer.grammer",
        "version": "19528286950"
      },
      "cve": "CVE-2012-6153",
      "vulnerable": true,
      "details": [
        {
          "file": "/org/apache/http/conn/ssl/AbstractVerifier.class",
          "qname": "org.apache.http.conn.ssl.AbstractVerifier",
          "contained": true,
          "include": true,
          "editable": true
        },
        {
          "file": "/org/apache/http/conn/ssl/AbstractVerifier.class",
          "qname": "org.apache.http.conn.ssl.AbstractVerifier.getCNs(X509Certificate)",
          "contained": true,
          "include": true,
          "editable": true
        },
        {
          "file": "/org/apache/http/conn/ssl/AbstractVerifier.class",
          "qname": "org.apache.http.conn.ssl.AbstractVerifier.verify(String,String[],String[],boolean)",
          "contained": true,
          "include": true,
          "editable": true
        }
      ],
      "timestamp": "2018-11-30"
    },
    {
      "org_gav": {
        "groupId": "com.fasterxml.jackson.core",
        "artifactId": "jackson-databind",
        "version": "2.9.7"
      },
      "gav": {
        "groupId": "dreamy",
        "artifactId": "spencer.grammer",
        "version": "19528286950"
      },
      "cve": "CVE-2018-19362",
      "vulnerable": true,
      "details": [],
      "timestamp": "2018-11-30"
    },
    {
      "org_gav": {
        "groupId": "com.fasterxml.jackson.core",
        "artifactId": "jackson-databind",
        "version": "2.9.7"
      },
      "gav": {
        "groupId": "dreamy",
        "artifactId": "spencer.grammer",
        "version": "19528286950"
      },
      "cve": "CVE-2018-19361",
      "vulnerable": true,
      "details": [],
      "timestamp": "2018-11-30"
    },
    {
      "org_gav": {
        "groupId": "com.fasterxml.jackson.core",
        "artifactId": "jackson-databind",
        "version": "2.9.7"
      },
      "gav": {
        "groupId": "dreamy",
        "artifactId": "spencer.grammer",
        "version": "19528286950"
      },
      "cve": "CVE-2018-19360",
      "vulnerable": true,
      "details": [],
      "timestamp": "2018-11-30"
    },
    {
      "org_gav": {
        "groupId": "org.springframework",
        "artifactId": "spring-core",
        "version": "5.0.5.RELEASE"
      },
      "gav": {
        "groupId": "dreamy",
        "artifactId": "spencer.grammer",
        "version": "19528286950"
      },
      "cve": "CVE-2018-11040",
      "vulnerable": false,
      "details": [
        {
          "file": "/org/springframework/web/servlet/view/json/MappingJackson2JsonView.class",
          "qname": "org.springframework.web.servlet.view.json.MappingJackson2JsonView",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/web/servlet/view/json/MappingJackson2JsonView.class",
          "qname": "org.springframework.web.servlet.view.json.MappingJackson2JsonView",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/web/servlet/view/json/MappingJackson2JsonViewTests.class",
          "qname": "org.springframework.web.servlet.view.json.MappingJackson2JsonViewTests",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/web/servlet/view/json/MappingJackson2JsonViewTests.class",
          "qname": "org.springframework.web.servlet.view.json.MappingJackson2JsonViewTests",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/web/servlet/view/json/MappingJackson2JsonViewTests.class",
          "qname": "org.springframework.web.servlet.view.json.MappingJackson2JsonViewTests.renderWithJsonp()",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/springframework/web/servlet/view/json/MappingJackson2JsonViewTests.class",
          "qname": "org.springframework.web.servlet.view.json.MappingJackson2JsonViewTests.renderWithJsonp()",
          "contained": false,
          "include": false,
          "editable": false
        }
      ],
      "timestamp": "2018-11-30"
    },
    {
      "org_gav": {
        "groupId": "org.apache.httpcomponents",
        "artifactId": "httpclient",
        "version": "4.1.3"
      },
      "gav": {
        "groupId": "dreamy",
        "artifactId": "spencer.grammer",
        "version": "19528286950"
      },
      "cve": "CVE-2015-5262",
      "vulnerable": false,
      "details": [
        {
          "file": "/org/apache/http/conn/ssl/SSLConnectionSocketFactory.class",
          "qname": "org.apache.http.conn.ssl.SSLConnectionSocketFactory",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "/org/apache/http/conn/ssl/SSLConnectionSocketFactory.class",
          "qname": "org.apache.http.conn.ssl.SSLConnectionSocketFactory.connectSocket(int,Socket,HttpHost,InetSocketAddress,InetSocketAddress,HttpContext)",
          "contained": false,
          "include": false,
          "editable": false
        },
        {
          "file": "-deprecated/org/apache/http/conn/ssl/SSLSocketFactory.class",
          "qname": "org.apache.http.conn.ssl.SSLSocketFactory",
          "contained": true,
          "include": true,
          "editable": true
        },
        {
          "file": "-deprecated/org/apache/http/conn/ssl/SSLSocketFactory.class",
          "qname": "org.apache.http.conn.ssl.SSLSocketFactory",
          "contained": true,
          "include": true,
          "editable": true
        },
        {
          "file": "-deprecated/org/apache/http/conn/ssl/SSLSocketFactory.class",
          "qname": "org.apache.http.conn.ssl.SSLSocketFactory.connectSocket(Socket,InetSocketAddress,InetSocketAddress,HttpParams)",
          "contained": true,
          "include": true,
          "editable": true
        },
        {
          "file": "-deprecated/org/apache/http/conn/ssl/SSLSocketFactory.class",
          "qname": "org.apache.http.conn.ssl.SSLSocketFactory.connectSocket(Socket,InetSocketAddress,InetSocketAddress,HttpParams)",
          "contained": true,
          "include": true,
          "editable": true
        }
      ],
      "timestamp": "2018-11-30"
    }
  ]
}